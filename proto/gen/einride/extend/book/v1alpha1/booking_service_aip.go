// Code generated by protoc-gen-go-aip. DO NOT EDIT.
//
// versions:
// 	protoc-gen-go-aip development
// 	protoc (unknown)
// source: einride/extend/book/v1alpha1/booking_service.proto

package bookv1alpha1

import (
	fmt "fmt"
	resourcename "go.einride.tech/aip/resourcename"
	strings "strings"
)

type SpaceResourceName struct {
	Space string
}

func (n SpaceResourceName) Validate() error {
	if n.Space == "" {
		return fmt.Errorf("space: empty")
	}
	if strings.IndexByte(n.Space, '/') != -1 {
		return fmt.Errorf("space: contains illegal character '/'")
	}
	return nil
}

func (n SpaceResourceName) ContainsWildcard() bool {
	return false || n.Space == "-"
}

func (n SpaceResourceName) String() string {
	return resourcename.Sprint(
		"spaces/{space}",
		n.Space,
	)
}

func (n SpaceResourceName) MarshalString() (string, error) {
	if err := n.Validate(); err != nil {
		return "", err
	}
	return n.String(), nil
}

func (n *SpaceResourceName) UnmarshalString(name string) error {
	return resourcename.Sscan(
		name,
		"spaces/{space}",
		&n.Space,
	)
}
