syntax = "proto3";

package einride.saga.extend.book.v1beta1;

import "einride/saga/extend/book/v1beta1/address.proto";
import "einride/saga/extend/book/v1beta1/shipment.proto";
import "einride/saga/extend/book/v1beta1/unit.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/protobuf/timestamp.proto";

// A Tour is a preplanned definition of what groups of goods are to be picked up and delivered, where, at what times, and in what order.
// When a tour is accepted and confirmed by Saga, Shipments based on the data provided in the Tour will be created.
message Tour {
  option (google.api.resource) = {
    type: "api.saga.einride.tech/Tour"
    pattern: "spaces/{space}/tours/{tour}"
    plural: "tours"
    singular: "tour"
  };
  // The resource name of the tour.
  string name = 1 [(google.api.field_behavior) = IDENTIFIER];
  // Resource name of the space that owns the tour.
  string space = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference) = {type: "api.saga.einride.tech/Space"}
  ];
  // Resource name of the sender of the tour.
  string sender = 3 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {type: "api.saga.einride.tech/Sender"}
  ];
  // The creation timestamp of the tour.
  google.protobuf.Timestamp create_time = 4 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The last update timestamp of the tour.
  // Updated when create/update/delete operation is performed.
  google.protobuf.Timestamp update_time = 5 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The deletion timestamp of the tour. This is set if the tour is deleted.
  google.protobuf.Timestamp delete_time = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The state of the tour. Set to PENDING upon creation.
  // A tour is then either accepted or rejected.
  State state = 7 [(google.api.field_behavior) = OUTPUT_ONLY];
  // The type of tour, either PROVISIONAL or CONFIRMED. Defaults to PROVISIONAL.
  TourType type = 8 [(google.api.field_behavior) = OPTIONAL];
  // The type of service to create a tour for.
  ServiceType service_type = 9 [(google.api.field_behavior) = REQUIRED];
  // External reference ID is a unique identifier that can be set by the client.
  string external_reference_id = 10 [(google.api.field_behavior) = OPTIONAL];
  // The rule that is applied when a confirmed tour is accepted. Defaults to CREATE_SHIPMENTS.
  AutomationRule automation_rule = 11 [(google.api.field_behavior) = OPTIONAL];

  // The preliminary shipments included in this tour.
  // A preliminary shipment includes input about the specific shipments for a tour, including units and references.
  repeated PreliminaryShipment preliminary_shipments = 12 [(google.api.field_behavior) = REQUIRED];
  // The ordered list of stops included in this tour.
  repeated Stop stops = 13 [(google.api.field_behavior) = REQUIRED];

  // The shipments that are associated with the tour. These are created when a tour is CONFIRMED and ACCEPTED.
  repeated Shipment created_shipments = 14 [(google.api.field_behavior) = OUTPUT_ONLY];

  // Supplementary annotation metadata for the tour, e.g. customer internal references.
  map<string, string> annotations = 15 [(google.api.field_behavior) = OPTIONAL];

  // The tour type.
  enum TourType {
    // Unspecified tour type
    TOUR_TYPE_UNSPECIFIED = 0;
    // The tour is provisional and can be updated.
    PROVISIONAL = 1;
    // The tour is confirmed and can not be updated.
    CONFIRMED = 2;
  }

  // The state of the tour.
  enum State {
    // Unspecified state
    STATE_UNSPECIFIED = 0;
    // The tour is received. Awaiting accept/reject.
    PENDING = 1;
    // The tour is accepted.
    ACCEPTED = 2;
    // The tour is rejected.
    REJECTED = 3;
    // The tour is cancelled.
    CANCELLED = 4;
  }

  // The service type of the tour.
  enum ServiceType {
    // Unspecified service type.
    SERVICE_TYPE_UNSPECIFIED = 0;
    // Service type FTL.
    FULL_TRUCK_LOAD = 1;
    // Service type distribution.
    DISTRIBUTION = 2;
    // Service type shuttle.
    SHUTTLE = 3;
    // Service type milk run.
    MILK_RUN = 4;
    // Service type drayage.
    DRAYAGE = 5;
  }

  // The rule that is applied when a confirmed tour is accepted.
  enum AutomationRule {
    // Unspecified auto rule.
    AUTOMATION_RULE_UNSPECIFIED = 0;
    // When the confirmed tour is accepted, shipments will be created automatically from its stops and units.
    CREATE_SHIPMENTS = 1;
    // When the confirmed tour is accepted, shipments will be created automatically from its stops and units
    // and then released.
    CREATE_AND_RELEASE_SHIPMENTS = 2;
  }

  // A stop is an address where an event is going to happen. The event is either to pickup or deliver goods.
  message Stop {
    // The address of this stop.
    Address address = 1 [(google.api.field_behavior) = REQUIRED];
    // The type of stop.
    Type stop_type = 2 [(google.api.field_behavior) = REQUIRED];
    // Instructions for this stop.
    string instructions = 3 [(google.api.field_behavior) = OPTIONAL];
    // The contact person for this stop.
    string contact_person = 7 [(google.api.field_behavior) = OPTIONAL];
    // The earliest time to arrive this stop.
    google.protobuf.Timestamp requested_start_time = 4 [(google.api.field_behavior) = REQUIRED];
    // The latest time to depart this stop.
    google.protobuf.Timestamp requested_end_time = 5 [(google.api.field_behavior) = REQUIRED];
    // The shipment external reference ids associated with this stop. E.g. for a pickup stop this will hold the shipments to pickup.
    // The external_reference_ids are defined in preliminary_shipments.
    repeated string shipment_external_reference_ids = 6 [(google.api.field_behavior) = REQUIRED];

    // Type describes the reason for the stop. E.g. a stop to deliver or pickup.
    enum Type {
      // Unknown type.
      TYPE_UNSPECIFIED = 0;
      // Stop to pick up goods.
      PICKUP = 1;
      // Stop to deliver goods.
      DELIVER = 2;
    }
  }

  // Customer provided information about a shipment associated with a tour that will be added to the created shipments.
  message PreliminaryShipment {
    // A customer provided external reference id.
    string external_reference_id = 1 [(google.api.field_behavior) = REQUIRED];
    // The units that should be shipped.
    repeated Unit units = 2 [(google.api.field_behavior) = REQUIRED];
    // Annotations for the shipment.
    map<string, string> annotations = 3 [(google.api.field_behavior) = OPTIONAL];
  }
}
