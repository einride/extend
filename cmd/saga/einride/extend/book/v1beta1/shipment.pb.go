// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: einride/extend/book/v1beta1/shipment.proto

package bookv1beta1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Shipment state
type Shipment_State int32

const (
	// Unspecified shipment state.
	Shipment_STATE_UNSPECIFIED Shipment_State = 0
	// Shipment is active and open for modification (initial state).
	Shipment_ACTIVE Shipment_State = 1
	// Shipment is ready for pickup.
	Shipment_RELEASED Shipment_State = 2
	// Shipment is cancelled.
	Shipment_CANCELLED Shipment_State = 3
)

// Enum value maps for Shipment_State.
var (
	Shipment_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "ACTIVE",
		2: "RELEASED",
		3: "CANCELLED",
	}
	Shipment_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"ACTIVE":            1,
		"RELEASED":          2,
		"CANCELLED":         3,
	}
)

func (x Shipment_State) Enum() *Shipment_State {
	p := new(Shipment_State)
	*p = x
	return p
}

func (x Shipment_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shipment_State) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_extend_book_v1beta1_shipment_proto_enumTypes[0].Descriptor()
}

func (Shipment_State) Type() protoreflect.EnumType {
	return &file_einride_extend_book_v1beta1_shipment_proto_enumTypes[0]
}

func (x Shipment_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shipment_State.Descriptor instead.
func (Shipment_State) EnumDescriptor() ([]byte, []int) {
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{0, 0}
}

// Stop state
type Stop_State int32

const (
	// Unspecified stop state
	Stop_STATE_UNSPECIFIED Stop_State = 0
	// Stop is not reached yet
	Stop_AWAITING Stop_State = 1
	// Stop is in progress, goods are currently delivered or picked up.
	Stop_IN_PROGRESS Stop_State = 2
	// Stop is done, goods are delivered or picked up.
	Stop_DONE Stop_State = 3
)

// Enum value maps for Stop_State.
var (
	Stop_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "AWAITING",
		2: "IN_PROGRESS",
		3: "DONE",
	}
	Stop_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"AWAITING":          1,
		"IN_PROGRESS":       2,
		"DONE":              3,
	}
)

func (x Stop_State) Enum() *Stop_State {
	p := new(Stop_State)
	*p = x
	return p
}

func (x Stop_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stop_State) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_extend_book_v1beta1_shipment_proto_enumTypes[1].Descriptor()
}

func (Stop_State) Type() protoreflect.EnumType {
	return &file_einride_extend_book_v1beta1_shipment_proto_enumTypes[1]
}

func (x Stop_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stop_State.Descriptor instead.
func (Stop_State) EnumDescriptor() ([]byte, []int) {
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{1, 0}
}

// Stop type
type Stop_Type int32

const (
	// Unspecified stop type
	Stop_TYPE_UNSPECIFIED Stop_Type = 0
	// Stop where goods are picked up
	Stop_PICKUP Stop_Type = 1
	// Stop where goods are delivered
	Stop_DELIVER Stop_Type = 2
)

// Enum value maps for Stop_Type.
var (
	Stop_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "PICKUP",
		2: "DELIVER",
	}
	Stop_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"PICKUP":           1,
		"DELIVER":          2,
	}
)

func (x Stop_Type) Enum() *Stop_Type {
	p := new(Stop_Type)
	*p = x
	return p
}

func (x Stop_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Stop_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_extend_book_v1beta1_shipment_proto_enumTypes[2].Descriptor()
}

func (Stop_Type) Type() protoreflect.EnumType {
	return &file_einride_extend_book_v1beta1_shipment_proto_enumTypes[2]
}

func (x Stop_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Stop_Type.Descriptor instead.
func (Stop_Type) EnumDescriptor() ([]byte, []int) {
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{1, 1}
}

// A shipment represents a demand to deliver goods from an origin to a destination.
type Shipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the shipment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Resource name of the space that owns the shipment.
	Space string `protobuf:"bytes,2,opt,name=space,proto3" json:"space,omitempty"`
	// Indicates if the shipment is deleted.
	Deleted bool `protobuf:"varint,3,opt,name=deleted,proto3" json:"deleted,omitempty"`
	// The creation timestamp of the shipment.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of the shipment.
	// Updated when create/update/delete operation is performed.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The deletion timestamp of the shipment.
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	// This checksum is computed by the server based on the value of other
	// fields, and may be sent on update and delete requests to ensure the
	// client has an up-to-date value before proceeding.
	Etag string `protobuf:"bytes,7,opt,name=etag,proto3" json:"etag,omitempty"`
	// Resource name of the user who created the shipment, if it was created manually.
	CreatorUser string `protobuf:"bytes,8,opt,name=creator_user,json=creatorUser,proto3" json:"creator_user,omitempty"`
	// Resource name of the organization for which the user created the shipment, if it was created manually.
	CreatorOrganization string `protobuf:"bytes,9,opt,name=creator_organization,json=creatorOrganization,proto3" json:"creator_organization,omitempty"`
	// Origin from where the shipment was created, e.g. BOOK_APP, DELIVER_APP, BOOKCTL
	CreatorOrigin string `protobuf:"bytes,10,opt,name=creator_origin,json=creatorOrigin,proto3" json:"creator_origin,omitempty"`
	// An external reference for this shipment.
	ExternalReferenceId string `protobuf:"bytes,11,opt,name=external_reference_id,json=externalReferenceId,proto3" json:"external_reference_id,omitempty"`
	// Shipment stops
	Stops []*Stop `protobuf:"bytes,12,rep,name=stops,proto3" json:"stops,omitempty"`
	// Shipment units
	Units []*Unit `protobuf:"bytes,13,rep,name=units,proto3" json:"units,omitempty"`
	// Shipment state
	State Shipment_State `protobuf:"varint,14,opt,name=state,proto3,enum=einride.extend.book.v1beta1.Shipment_State" json:"state,omitempty"`
}

func (x *Shipment) Reset() {
	*x = Shipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_extend_book_v1beta1_shipment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipment) ProtoMessage() {}

func (x *Shipment) ProtoReflect() protoreflect.Message {
	mi := &file_einride_extend_book_v1beta1_shipment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipment.ProtoReflect.Descriptor instead.
func (*Shipment) Descriptor() ([]byte, []int) {
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{0}
}

func (x *Shipment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Shipment) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *Shipment) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *Shipment) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Shipment) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Shipment) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *Shipment) GetEtag() string {
	if x != nil {
		return x.Etag
	}
	return ""
}

func (x *Shipment) GetCreatorUser() string {
	if x != nil {
		return x.CreatorUser
	}
	return ""
}

func (x *Shipment) GetCreatorOrganization() string {
	if x != nil {
		return x.CreatorOrganization
	}
	return ""
}

func (x *Shipment) GetCreatorOrigin() string {
	if x != nil {
		return x.CreatorOrigin
	}
	return ""
}

func (x *Shipment) GetExternalReferenceId() string {
	if x != nil {
		return x.ExternalReferenceId
	}
	return ""
}

func (x *Shipment) GetStops() []*Stop {
	if x != nil {
		return x.Stops
	}
	return nil
}

func (x *Shipment) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *Shipment) GetState() Shipment_State {
	if x != nil {
		return x.State
	}
	return Shipment_STATE_UNSPECIFIED
}

// A stop is where goods are picked up or delivered.
type Stop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the stop.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The destination of the stop.
	//
	// Types that are assignable to Destination:
	//	*Stop_Location
	//	*Stop_Address
	Destination isStop_Destination `protobuf_oneof:"destination"`
	// Type of stop.
	Type Stop_Type `protobuf:"varint,4,opt,name=type,proto3,enum=einride.extend.book.v1beta1.Stop_Type" json:"type,omitempty"`
	// Instructions on the stop, for example which trailer to pick up or park the trailer at space 123 at lot B.
	Instructions string `protobuf:"bytes,5,opt,name=instructions,proto3" json:"instructions,omitempty"`
	// State of the stop.
	State Stop_State `protobuf:"varint,6,opt,name=state,proto3,enum=einride.extend.book.v1beta1.Stop_State" json:"state,omitempty"`
	// IDs of units picked up or delivered at stop.
	UnitIds []string `protobuf:"bytes,7,rep,name=unit_ids,json=unitIds,proto3" json:"unit_ids,omitempty"`
}

func (x *Stop) Reset() {
	*x = Stop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_extend_book_v1beta1_shipment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stop) ProtoMessage() {}

func (x *Stop) ProtoReflect() protoreflect.Message {
	mi := &file_einride_extend_book_v1beta1_shipment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stop.ProtoReflect.Descriptor instead.
func (*Stop) Descriptor() ([]byte, []int) {
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{1}
}

func (x *Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *Stop) GetDestination() isStop_Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (x *Stop) GetLocation() string {
	if x, ok := x.GetDestination().(*Stop_Location); ok {
		return x.Location
	}
	return ""
}

func (x *Stop) GetAddress() *Address {
	if x, ok := x.GetDestination().(*Stop_Address); ok {
		return x.Address
	}
	return nil
}

func (x *Stop) GetType() Stop_Type {
	if x != nil {
		return x.Type
	}
	return Stop_TYPE_UNSPECIFIED
}

func (x *Stop) GetInstructions() string {
	if x != nil {
		return x.Instructions
	}
	return ""
}

func (x *Stop) GetState() Stop_State {
	if x != nil {
		return x.State
	}
	return Stop_STATE_UNSPECIFIED
}

func (x *Stop) GetUnitIds() []string {
	if x != nil {
		return x.UnitIds
	}
	return nil
}

type isStop_Destination interface {
	isStop_Destination()
}

type Stop_Location struct {
	// The location resource name of the stop.
	Location string `protobuf:"bytes,2,opt,name=location,proto3,oneof"`
}

type Stop_Address struct {
	// The address of the stop.
	Address *Address `protobuf:"bytes,3,opt,name=address,proto3,oneof"`
}

func (*Stop_Location) isStop_Destination() {}

func (*Stop_Address) isStop_Destination() {}

// A unit is a holder of goods such as a EUR-pallet.
type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The id of the unit
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Type of unit
	Type string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	// Unique tracking ID
	TrackingId string `protobuf:"bytes,3,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	// Weight in kilograms
	WeightKg float32 `protobuf:"fixed32,4,opt,name=weight_kg,json=weightKg,proto3" json:"weight_kg,omitempty"`
	// External reference
	ExternalReference string `protobuf:"bytes,5,opt,name=external_reference,json=externalReference,proto3" json:"external_reference,omitempty"`
	// Description of the unit
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	// ID of stop where unit is picked up
	PickupStopId string `protobuf:"bytes,7,opt,name=pickup_stop_id,json=pickupStopId,proto3" json:"pickup_stop_id,omitempty"`
	// ID of stop where unit is delivered
	DeliverStopId string `protobuf:"bytes,8,opt,name=deliver_stop_id,json=deliverStopId,proto3" json:"deliver_stop_id,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_extend_book_v1beta1_shipment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_einride_extend_book_v1beta1_shipment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2}
}

func (x *Unit) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Unit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Unit) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *Unit) GetWeightKg() float32 {
	if x != nil {
		return x.WeightKg
	}
	return 0
}

func (x *Unit) GetExternalReference() string {
	if x != nil {
		return x.ExternalReference
	}
	return ""
}

func (x *Unit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Unit) GetPickupStopId() string {
	if x != nil {
		return x.PickupStopId
	}
	return ""
}

func (x *Unit) GetDeliverStopId() string {
	if x != nil {
		return x.DeliverStopId
	}
	return ""
}

var File_einride_extend_book_v1beta1_shipment_proto protoreflect.FileDescriptor

var file_einride_extend_book_v1beta1_shipment_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x65, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x1a, 0x29, 0x65, 0x69, 0x6e, 0x72, 0x69,
	0x64, 0x65, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xd5, 0x07, 0x0a, 0x08, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0xe2, 0x41, 0x01, 0x03, 0xfa, 0x41, 0x1d,
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x07, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x03, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x04, 0x65, 0x74, 0x61, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x03, 0x52, 0x04, 0x65, 0x74, 0x61, 0x67, 0x12, 0x46, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xe2,
	0x41, 0x01, 0x03, 0xfa, 0x41, 0x1c, 0x0a, 0x1a, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x5e, 0x0a, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x67, 0x61, 0x6e,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe2,
	0x41, 0x01, 0x03, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4f, 0x72,
	0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x38, 0x0a, 0x15,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x05, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x70, 0x73, 0x12,
	0x37, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e,
	0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69,
	0x74, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x47, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x22, 0x47, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43,
	0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x3a, 0x5d, 0xea, 0x41, 0x5a, 0x0a,
	0x1e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x23, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d, 0x2f,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x7d, 0x2a, 0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x32,
	0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xfc, 0x03, 0x0a, 0x04, 0x53, 0x74,
	0x6f, 0x70, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xe2, 0x41, 0x01, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x23, 0xfa, 0x41, 0x20, 0x0a,
	0x1e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x48, 0x00, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x40, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x65, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f,
	0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x43, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31,
	0x2e, 0x53, 0x74, 0x6f, 0x70, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03,
	0x52, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x73, 0x22, 0x47, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x57, 0x41,
	0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x4f, 0x4e, 0x45,
	0x10, 0x03, 0x22, 0x35, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x49, 0x43, 0x4b, 0x55, 0x50, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x10, 0x02, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa5, 0x02, 0x0a, 0x04, 0x55, 0x6e, 0x69,
	0x74, 0x12, 0x14, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x6b, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x4b, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70,
	0x5f, 0x73, 0x74, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xe2, 0x41, 0x01, 0x03, 0x52, 0x0c, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x03, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x53, 0x74, 0x6f, 0x70, 0x49, 0x64,
	0x42, 0x89, 0x02, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x42, 0x0d, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73, 0x61, 0x67, 0x61, 0x2f, 0x63,
	0x6d, 0x64, 0x2f, 0x73, 0x61, 0x67, 0x61, 0x2f, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x3b, 0x62, 0x6f, 0x6f, 0x6b, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xa2,
	0x02, 0x03, 0x45, 0x45, 0x42, 0xaa, 0x02, 0x1b, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x56, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0xca, 0x02, 0x1b, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x5c, 0x42, 0x6f, 0x6f, 0x6b, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0xe2, 0x02, 0x27, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x5c, 0x42, 0x6f, 0x6f, 0x6b, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x1e, 0x45, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x42,
	0x6f, 0x6f, 0x6b, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_einride_extend_book_v1beta1_shipment_proto_rawDescOnce sync.Once
	file_einride_extend_book_v1beta1_shipment_proto_rawDescData = file_einride_extend_book_v1beta1_shipment_proto_rawDesc
)

func file_einride_extend_book_v1beta1_shipment_proto_rawDescGZIP() []byte {
	file_einride_extend_book_v1beta1_shipment_proto_rawDescOnce.Do(func() {
		file_einride_extend_book_v1beta1_shipment_proto_rawDescData = protoimpl.X.CompressGZIP(file_einride_extend_book_v1beta1_shipment_proto_rawDescData)
	})
	return file_einride_extend_book_v1beta1_shipment_proto_rawDescData
}

var file_einride_extend_book_v1beta1_shipment_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_einride_extend_book_v1beta1_shipment_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_einride_extend_book_v1beta1_shipment_proto_goTypes = []interface{}{
	(Shipment_State)(0),           // 0: einride.extend.book.v1beta1.Shipment.State
	(Stop_State)(0),               // 1: einride.extend.book.v1beta1.Stop.State
	(Stop_Type)(0),                // 2: einride.extend.book.v1beta1.Stop.Type
	(*Shipment)(nil),              // 3: einride.extend.book.v1beta1.Shipment
	(*Stop)(nil),                  // 4: einride.extend.book.v1beta1.Stop
	(*Unit)(nil),                  // 5: einride.extend.book.v1beta1.Unit
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
	(*Address)(nil),               // 7: einride.extend.book.v1beta1.Address
}
var file_einride_extend_book_v1beta1_shipment_proto_depIdxs = []int32{
	6, // 0: einride.extend.book.v1beta1.Shipment.create_time:type_name -> google.protobuf.Timestamp
	6, // 1: einride.extend.book.v1beta1.Shipment.update_time:type_name -> google.protobuf.Timestamp
	6, // 2: einride.extend.book.v1beta1.Shipment.delete_time:type_name -> google.protobuf.Timestamp
	4, // 3: einride.extend.book.v1beta1.Shipment.stops:type_name -> einride.extend.book.v1beta1.Stop
	5, // 4: einride.extend.book.v1beta1.Shipment.units:type_name -> einride.extend.book.v1beta1.Unit
	0, // 5: einride.extend.book.v1beta1.Shipment.state:type_name -> einride.extend.book.v1beta1.Shipment.State
	7, // 6: einride.extend.book.v1beta1.Stop.address:type_name -> einride.extend.book.v1beta1.Address
	2, // 7: einride.extend.book.v1beta1.Stop.type:type_name -> einride.extend.book.v1beta1.Stop.Type
	1, // 8: einride.extend.book.v1beta1.Stop.state:type_name -> einride.extend.book.v1beta1.Stop.State
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_einride_extend_book_v1beta1_shipment_proto_init() }
func file_einride_extend_book_v1beta1_shipment_proto_init() {
	if File_einride_extend_book_v1beta1_shipment_proto != nil {
		return
	}
	file_einride_extend_book_v1beta1_address_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_einride_extend_book_v1beta1_shipment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_extend_book_v1beta1_shipment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_extend_book_v1beta1_shipment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_einride_extend_book_v1beta1_shipment_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Stop_Location)(nil),
		(*Stop_Address)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_einride_extend_book_v1beta1_shipment_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_einride_extend_book_v1beta1_shipment_proto_goTypes,
		DependencyIndexes: file_einride_extend_book_v1beta1_shipment_proto_depIdxs,
		EnumInfos:         file_einride_extend_book_v1beta1_shipment_proto_enumTypes,
		MessageInfos:      file_einride_extend_book_v1beta1_shipment_proto_msgTypes,
	}.Build()
	File_einride_extend_book_v1beta1_shipment_proto = out.File
	file_einride_extend_book_v1beta1_shipment_proto_rawDesc = nil
	file_einride_extend_book_v1beta1_shipment_proto_goTypes = nil
	file_einride_extend_book_v1beta1_shipment_proto_depIdxs = nil
}
