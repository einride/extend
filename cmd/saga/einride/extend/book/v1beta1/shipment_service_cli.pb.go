// Code generated by protoc-gen-go-cli. DO NOT EDIT.
// versions:
//
//	protoc        (unknown)
package bookv1beta1

import (
	cobra "github.com/spf13/cobra"
	cli "go.einride.tech/protoc-gen-go-cli/cli"
	protoflag "go.einride.tech/protoc-gen-go-cli/protoflag"
	protojson "google.golang.org/protobuf/encoding/protojson"
	os "os"
)

func NewShipmentServiceCommand(use string) *cobra.Command {
	cmd := &cobra.Command{
		Use:   use,
		Short: "shipment service",
		Annotations: map[string]string{
			"type": "service",
		},
		PersistentPreRun: func(cmd *cobra.Command, _ []string) {
			cli.SetDefaultHost(cmd.Context(), "api.saga.einride.tech")
		},
	}
	cmd.AddCommand(newShipmentServiceCreateShipmentCommand())
	cmd.AddCommand(newShipmentServiceGetShipmentCommand())
	cmd.AddCommand(newShipmentServiceReleaseShipmentCommand())
	return cmd
}

func newShipmentServiceCreateShipmentCommand() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "create-shipment",
		Short: "create a shipment in a space",
	}
	var fromFile string
	cmd.Flags().StringVarP(&fromFile, "from-file", "f", "", "path to a JSON file containing request payload")
	_ = cmd.MarkFlagFilename("from-file", "json")
	var flag_Parent protoflag.String
	cmd.Flags().Var(
		&flag_Parent,
		"parent",
		"the parent space in which to create the shipment",
	)
	_ = cmd.RegisterFlagCompletionFunc(
		"parent",
		cli.ResourceNameCompletionFunc(
			"spaces/{space}",
		),
	)
	var flag_Shipment_Sender protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_Sender,
		"shipment.sender",
		"resource name of the sender of the shipment",
	)
	_ = cmd.RegisterFlagCompletionFunc(
		"shipment.sender",
		cli.ResourceNameCompletionFunc(
			"spaces/{space}/senders/{sender}",
		),
	)
	var flag_Shipment_PickupLocation_AddressRecipient protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressRecipient,
		"shipment.pickup-location.address-recipient",
		"address recipient",
	)
	var flag_Shipment_PickupLocation_AddressCo protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressCo,
		"shipment.pickup-location.address-co",
		"address care of (c/o)",
	)
	var flag_Shipment_PickupLocation_AddressLine1 protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressLine1,
		"shipment.pickup-location.address-line1",
		"address line 1",
	)
	var flag_Shipment_PickupLocation_AddressLine2 protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressLine2,
		"shipment.pickup-location.address-line2",
		"address line 2",
	)
	var flag_Shipment_PickupLocation_AddressPostalCode protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressPostalCode,
		"shipment.pickup-location.address-postal-code",
		"address postal code",
	)
	var flag_Shipment_PickupLocation_AddressCity protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressCity,
		"shipment.pickup-location.address-city",
		"address city",
	)
	var flag_Shipment_PickupLocation_AddressCountryCode protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressCountryCode,
		"shipment.pickup-location.address-country-code",
		"address country code (iso 3166-1 alpha-2 https:en",
	)
	var flag_Shipment_PickupLocation_AddressStateCode protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_AddressStateCode,
		"shipment.pickup-location.address-state-code",
		"address state code",
	)
	var flag_Shipment_PickupLocation_DisplayName protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_DisplayName,
		"shipment.pickup-location.display-name",
		"the displayed name of the location",
	)
	var flag_Shipment_PickupLocation_Contacts protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_Contacts,
		"shipment.pickup-location.contacts",
		"location contact information",
	)
	var flag_Shipment_PickupLocation_Latitude protoflag.Double
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_Latitude,
		"shipment.pickup-location.latitude",
		"the latitude of the location in degrees",
	)
	var flag_Shipment_PickupLocation_Longitude protoflag.Double
	cmd.Flags().Var(
		&flag_Shipment_PickupLocation_Longitude,
		"shipment.pickup-location.longitude",
		"the longitude of the location in degrees",
	)
	var flag_Shipment_PickupInstructions protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_PickupInstructions,
		"shipment.pickup-instructions",
		"instructions for the pickup",
	)
	var flag_Shipment_RequestedPickupStartTime protoflag.Timestamp
	cmd.Flags().Var(
		&flag_Shipment_RequestedPickupStartTime,
		"shipment.requested-pickup-start-time",
		"the shipment should be picked up after this time",
	)
	var flag_Shipment_RequestedPickupEndTime protoflag.Timestamp
	cmd.Flags().Var(
		&flag_Shipment_RequestedPickupEndTime,
		"shipment.requested-pickup-end-time",
		"the shipment should be picked up before this time",
	)
	var flag_Shipment_DeliveryLocation_AddressRecipient protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressRecipient,
		"shipment.delivery-location.address-recipient",
		"address recipient",
	)
	var flag_Shipment_DeliveryLocation_AddressCo protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressCo,
		"shipment.delivery-location.address-co",
		"address care of (c/o)",
	)
	var flag_Shipment_DeliveryLocation_AddressLine1 protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressLine1,
		"shipment.delivery-location.address-line1",
		"address line 1",
	)
	var flag_Shipment_DeliveryLocation_AddressLine2 protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressLine2,
		"shipment.delivery-location.address-line2",
		"address line 2",
	)
	var flag_Shipment_DeliveryLocation_AddressPostalCode protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressPostalCode,
		"shipment.delivery-location.address-postal-code",
		"address postal code",
	)
	var flag_Shipment_DeliveryLocation_AddressCity protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressCity,
		"shipment.delivery-location.address-city",
		"address city",
	)
	var flag_Shipment_DeliveryLocation_AddressCountryCode protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressCountryCode,
		"shipment.delivery-location.address-country-code",
		"address country code (iso 3166-1 alpha-2 https:en",
	)
	var flag_Shipment_DeliveryLocation_AddressStateCode protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_AddressStateCode,
		"shipment.delivery-location.address-state-code",
		"address state code",
	)
	var flag_Shipment_DeliveryLocation_DisplayName protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_DisplayName,
		"shipment.delivery-location.display-name",
		"the displayed name of the location",
	)
	var flag_Shipment_DeliveryLocation_Contacts protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_Contacts,
		"shipment.delivery-location.contacts",
		"location contact information",
	)
	var flag_Shipment_DeliveryLocation_Latitude protoflag.Double
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_Latitude,
		"shipment.delivery-location.latitude",
		"the latitude of the location in degrees",
	)
	var flag_Shipment_DeliveryLocation_Longitude protoflag.Double
	cmd.Flags().Var(
		&flag_Shipment_DeliveryLocation_Longitude,
		"shipment.delivery-location.longitude",
		"the longitude of the location in degrees",
	)
	var flag_Shipment_DeliveryInstructions protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_DeliveryInstructions,
		"shipment.delivery-instructions",
		"instructions for the delivery",
	)
	var flag_Shipment_RequestedDeliveryStartTime protoflag.Timestamp
	cmd.Flags().Var(
		&flag_Shipment_RequestedDeliveryStartTime,
		"shipment.requested-delivery-start-time",
		"the shipment should be delivered after this time",
	)
	var flag_Shipment_RequestedDeliveryEndTime protoflag.Timestamp
	cmd.Flags().Var(
		&flag_Shipment_RequestedDeliveryEndTime,
		"shipment.requested-delivery-end-time",
		"the shipment should be delivered before this time",
	)
	var flag_Shipment_ExternalReferenceId protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_ExternalReferenceId,
		"shipment.external-reference-id",
		"an external reference for this shipment",
	)
	var flag_Shipment_Booking protoflag.String
	cmd.Flags().Var(
		&flag_Shipment_Booking,
		"shipment.booking",
		"resource name of the booking this shipment relates to",
	)
	_ = cmd.RegisterFlagCompletionFunc(
		"shipment.booking",
		cli.ResourceNameCompletionFunc(
			"spaces/{space}/bookings/{booking}",
		),
	)
	flag_Shipment_State := protoflag.Enum{
		Value: Shipment_State(0),
	}
	cmd.Flags().Var(
		&flag_Shipment_State,
		"shipment.state",
		"shipment state can be set to active (default) or released when creating a shipment",
	)
	cmd.RunE = func(cmd *cobra.Command, args []string) error {
		var request CreateShipmentRequest
		if cmd.Flags().Changed("from-file") {
			data, err := os.ReadFile(fromFile)
			if err != nil {
				return err
			}
			if err := protojson.Unmarshal(data, &request); err != nil {
				return err
			}
		}
		if cmd.Flags().Changed("parent") {
			r := request.ProtoReflect()
			r.Set(r.Descriptor().Fields().ByName("parent"), flag_Parent.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.sender") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("sender"), flag_Shipment_Sender.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-recipient") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_recipient"), flag_Shipment_PickupLocation_AddressRecipient.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-co") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_co"), flag_Shipment_PickupLocation_AddressCo.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-line1") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_line1"), flag_Shipment_PickupLocation_AddressLine1.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-line2") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_line2"), flag_Shipment_PickupLocation_AddressLine2.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-postal-code") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_postal_code"), flag_Shipment_PickupLocation_AddressPostalCode.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-city") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_city"), flag_Shipment_PickupLocation_AddressCity.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-country-code") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_country_code"), flag_Shipment_PickupLocation_AddressCountryCode.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.address-state-code") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_state_code"), flag_Shipment_PickupLocation_AddressStateCode.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.display-name") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("display_name"), flag_Shipment_PickupLocation_DisplayName.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.contacts") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("contacts"), flag_Shipment_PickupLocation_Contacts.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.latitude") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("latitude"), flag_Shipment_PickupLocation_Latitude.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-location.longitude") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("pickup_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("longitude"), flag_Shipment_PickupLocation_Longitude.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.pickup-instructions") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("pickup_instructions"), flag_Shipment_PickupInstructions.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.requested-pickup-start-time") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("requested_pickup_start_time"), flag_Shipment_RequestedPickupStartTime.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.requested-pickup-end-time") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("requested_pickup_end_time"), flag_Shipment_RequestedPickupEndTime.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-recipient") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_recipient"), flag_Shipment_DeliveryLocation_AddressRecipient.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-co") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_co"), flag_Shipment_DeliveryLocation_AddressCo.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-line1") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_line1"), flag_Shipment_DeliveryLocation_AddressLine1.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-line2") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_line2"), flag_Shipment_DeliveryLocation_AddressLine2.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-postal-code") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_postal_code"), flag_Shipment_DeliveryLocation_AddressPostalCode.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-city") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_city"), flag_Shipment_DeliveryLocation_AddressCity.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-country-code") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_country_code"), flag_Shipment_DeliveryLocation_AddressCountryCode.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.address-state-code") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("address_state_code"), flag_Shipment_DeliveryLocation_AddressStateCode.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.display-name") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("display_name"), flag_Shipment_DeliveryLocation_DisplayName.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.contacts") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("contacts"), flag_Shipment_DeliveryLocation_Contacts.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.latitude") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("latitude"), flag_Shipment_DeliveryLocation_Latitude.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-location.longitude") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r = r.Mutable(r.Descriptor().Fields().ByName("delivery_location")).Message()
			r.Set(r.Descriptor().Fields().ByName("longitude"), flag_Shipment_DeliveryLocation_Longitude.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.delivery-instructions") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("delivery_instructions"), flag_Shipment_DeliveryInstructions.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.requested-delivery-start-time") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("requested_delivery_start_time"), flag_Shipment_RequestedDeliveryStartTime.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.requested-delivery-end-time") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("requested_delivery_end_time"), flag_Shipment_RequestedDeliveryEndTime.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.external-reference-id") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("external_reference_id"), flag_Shipment_ExternalReferenceId.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.booking") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("booking"), flag_Shipment_Booking.ProtoReflectValue())
		}
		if cmd.Flags().Changed("shipment.state") {
			r := request.ProtoReflect()
			r = r.Mutable(r.Descriptor().Fields().ByName("shipment")).Message()
			r.Set(r.Descriptor().Fields().ByName("state"), flag_Shipment_State.ProtoReflectValue())
		}
		conn, err := cli.Dial(cmd.Context())
		if err != nil {
			return err
		}
		client := NewShipmentServiceClient(conn)
		cli.LogRequest(cmd.Context(), &request)
		response, err := client.CreateShipment(cmd.Context(), &request)
		if err != nil {
			cli.LogError(cmd.Context(), err)
			os.Exit(1)
		}
		cli.LogResponse(cmd.Context(), response)
		return nil
	}
	return cmd
}

func newShipmentServiceGetShipmentCommand() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "get-shipment",
		Short: "get a shipment",
	}
	var fromFile string
	cmd.Flags().StringVarP(&fromFile, "from-file", "f", "", "path to a JSON file containing request payload")
	_ = cmd.MarkFlagFilename("from-file", "json")
	var flag_Name protoflag.String
	cmd.Flags().Var(
		&flag_Name,
		"name",
		"the resource name of the shipment to retrieve",
	)
	_ = cmd.RegisterFlagCompletionFunc(
		"name",
		cli.ResourceNameCompletionFunc(
			"spaces/{space}/shipments/{shipment}",
		),
	)
	cmd.RunE = func(cmd *cobra.Command, args []string) error {
		var request GetShipmentRequest
		if cmd.Flags().Changed("from-file") {
			data, err := os.ReadFile(fromFile)
			if err != nil {
				return err
			}
			if err := protojson.Unmarshal(data, &request); err != nil {
				return err
			}
		}
		if cmd.Flags().Changed("name") {
			r := request.ProtoReflect()
			r.Set(r.Descriptor().Fields().ByName("name"), flag_Name.ProtoReflectValue())
		}
		conn, err := cli.Dial(cmd.Context())
		if err != nil {
			return err
		}
		client := NewShipmentServiceClient(conn)
		cli.LogRequest(cmd.Context(), &request)
		response, err := client.GetShipment(cmd.Context(), &request)
		if err != nil {
			cli.LogError(cmd.Context(), err)
			os.Exit(1)
		}
		cli.LogResponse(cmd.Context(), response)
		return nil
	}
	return cmd
}

func newShipmentServiceReleaseShipmentCommand() *cobra.Command {
	cmd := &cobra.Command{
		Use:   "release-shipment",
		Short: "release a shipment",
	}
	var fromFile string
	cmd.Flags().StringVarP(&fromFile, "from-file", "f", "", "path to a JSON file containing request payload")
	_ = cmd.MarkFlagFilename("from-file", "json")
	var flag_Name protoflag.String
	cmd.Flags().Var(
		&flag_Name,
		"name",
		"the resource name of the shipment to release",
	)
	_ = cmd.RegisterFlagCompletionFunc(
		"name",
		cli.ResourceNameCompletionFunc(
			"spaces/{space}/shipments/{shipment}",
		),
	)
	cmd.RunE = func(cmd *cobra.Command, args []string) error {
		var request ReleaseShipmentRequest
		if cmd.Flags().Changed("from-file") {
			data, err := os.ReadFile(fromFile)
			if err != nil {
				return err
			}
			if err := protojson.Unmarshal(data, &request); err != nil {
				return err
			}
		}
		if cmd.Flags().Changed("name") {
			r := request.ProtoReflect()
			r.Set(r.Descriptor().Fields().ByName("name"), flag_Name.ProtoReflectValue())
		}
		conn, err := cli.Dial(cmd.Context())
		if err != nil {
			return err
		}
		client := NewShipmentServiceClient(conn)
		cli.LogRequest(cmd.Context(), &request)
		response, err := client.ReleaseShipment(cmd.Context(), &request)
		if err != nil {
			cli.LogError(cmd.Context(), err)
			os.Exit(1)
		}
		cli.LogResponse(cmd.Context(), response)
		return nil
	}
	return cmd
}
