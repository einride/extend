// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: einride/saga/extend/book/v1beta1/shipment.proto

package bookv1beta1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Shipment state
type Shipment_State int32

const (
	// Unspecified shipment state.
	Shipment_STATE_UNSPECIFIED Shipment_State = 0
	// Shipment is active (initial state).
	Shipment_ACTIVE Shipment_State = 1
	// Shipment is ready for pickup.
	Shipment_RELEASED Shipment_State = 2
)

// Enum value maps for Shipment_State.
var (
	Shipment_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "ACTIVE",
		2: "RELEASED",
	}
	Shipment_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"ACTIVE":            1,
		"RELEASED":          2,
	}
)

func (x Shipment_State) Enum() *Shipment_State {
	p := new(Shipment_State)
	*p = x
	return p
}

func (x Shipment_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shipment_State) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[0].Descriptor()
}

func (Shipment_State) Type() protoreflect.EnumType {
	return &file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[0]
}

func (x Shipment_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shipment_State.Descriptor instead.
func (Shipment_State) EnumDescriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{0, 0}
}

// Shipment delivery state
type Shipment_DeliveryState int32

const (
	// Unspecified shipment delivery state
	Shipment_DELIVERY_STATE_UNSPECIFIED Shipment_DeliveryState = 0
	// Shipment delivery hasn't started
	Shipment_AWAITING Shipment_DeliveryState = 1
	// Shipment is in transit
	Shipment_IN_TRANSIT Shipment_DeliveryState = 2
	// Shipment is delivered
	Shipment_DELIVERED Shipment_DeliveryState = 3
)

// Enum value maps for Shipment_DeliveryState.
var (
	Shipment_DeliveryState_name = map[int32]string{
		0: "DELIVERY_STATE_UNSPECIFIED",
		1: "AWAITING",
		2: "IN_TRANSIT",
		3: "DELIVERED",
	}
	Shipment_DeliveryState_value = map[string]int32{
		"DELIVERY_STATE_UNSPECIFIED": 0,
		"AWAITING":                   1,
		"IN_TRANSIT":                 2,
		"DELIVERED":                  3,
	}
)

func (x Shipment_DeliveryState) Enum() *Shipment_DeliveryState {
	p := new(Shipment_DeliveryState)
	*p = x
	return p
}

func (x Shipment_DeliveryState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Shipment_DeliveryState) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[1].Descriptor()
}

func (Shipment_DeliveryState) Type() protoreflect.EnumType {
	return &file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[1]
}

func (x Shipment_DeliveryState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Shipment_DeliveryState.Descriptor instead.
func (Shipment_DeliveryState) EnumDescriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{0, 1}
}

// Weight units
type Unit_Weight_Unit int32

const (
	// Unspecified unit
	Unit_Weight_UNIT_UNSPECIFIED Unit_Weight_Unit = 0
	// Kilograms
	Unit_Weight_KG Unit_Weight_Unit = 1
	// Pounds
	Unit_Weight_LBS Unit_Weight_Unit = 2
)

// Enum value maps for Unit_Weight_Unit.
var (
	Unit_Weight_Unit_name = map[int32]string{
		0: "UNIT_UNSPECIFIED",
		1: "KG",
		2: "LBS",
	}
	Unit_Weight_Unit_value = map[string]int32{
		"UNIT_UNSPECIFIED": 0,
		"KG":               1,
		"LBS":              2,
	}
)

func (x Unit_Weight_Unit) Enum() *Unit_Weight_Unit {
	p := new(Unit_Weight_Unit)
	*p = x
	return p
}

func (x Unit_Weight_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit_Weight_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[2].Descriptor()
}

func (Unit_Weight_Unit) Type() protoreflect.EnumType {
	return &file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[2]
}

func (x Unit_Weight_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit_Weight_Unit.Descriptor instead.
func (Unit_Weight_Unit) EnumDescriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2, 0, 0}
}

// Length units
type Unit_Length_Unit int32

const (
	// Unspecified unit
	Unit_Length_UNIT_UNSPECIFIED Unit_Length_Unit = 0
	// Centimeters
	Unit_Length_CM Unit_Length_Unit = 1
	// Inches
	Unit_Length_IN Unit_Length_Unit = 2
)

// Enum value maps for Unit_Length_Unit.
var (
	Unit_Length_Unit_name = map[int32]string{
		0: "UNIT_UNSPECIFIED",
		1: "CM",
		2: "IN",
	}
	Unit_Length_Unit_value = map[string]int32{
		"UNIT_UNSPECIFIED": 0,
		"CM":               1,
		"IN":               2,
	}
)

func (x Unit_Length_Unit) Enum() *Unit_Length_Unit {
	p := new(Unit_Length_Unit)
	*p = x
	return p
}

func (x Unit_Length_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit_Length_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[3].Descriptor()
}

func (Unit_Length_Unit) Type() protoreflect.EnumType {
	return &file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[3]
}

func (x Unit_Length_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit_Length_Unit.Descriptor instead.
func (Unit_Length_Unit) EnumDescriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2, 1, 0}
}

// Volume units
type Unit_Volume_Unit int32

const (
	// Unspecified unit
	Unit_Volume_UNIT_UNSPECIFIED Unit_Volume_Unit = 0
	// Cubic meters
	Unit_Volume_CBM Unit_Volume_Unit = 1
	// Cubic feet
	Unit_Volume_CBFT Unit_Volume_Unit = 2
)

// Enum value maps for Unit_Volume_Unit.
var (
	Unit_Volume_Unit_name = map[int32]string{
		0: "UNIT_UNSPECIFIED",
		1: "CBM",
		2: "CBFT",
	}
	Unit_Volume_Unit_value = map[string]int32{
		"UNIT_UNSPECIFIED": 0,
		"CBM":              1,
		"CBFT":             2,
	}
)

func (x Unit_Volume_Unit) Enum() *Unit_Volume_Unit {
	p := new(Unit_Volume_Unit)
	*p = x
	return p
}

func (x Unit_Volume_Unit) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Unit_Volume_Unit) Descriptor() protoreflect.EnumDescriptor {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[4].Descriptor()
}

func (Unit_Volume_Unit) Type() protoreflect.EnumType {
	return &file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes[4]
}

func (x Unit_Volume_Unit) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Unit_Volume_Unit.Descriptor instead.
func (Unit_Volume_Unit) EnumDescriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2, 2, 0}
}

// A shipment represents a demand to deliver goods from an origin to a destination.
type Shipment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the shipment.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Resource name of the space that owns the shipment.
	Space string `protobuf:"bytes,2,opt,name=space,proto3" json:"space,omitempty"`
	// Resource name of the sender of the shipment.
	Sender string `protobuf:"bytes,3,opt,name=sender,proto3" json:"sender,omitempty"`
	// The creation timestamp of the shipment.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last update timestamp of the shipment.
	// Updated when create/update/delete operation is performed.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The deletion timestamp of the shipment. Set if the shipment is deleted.
	DeleteTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=delete_time,json=deleteTime,proto3" json:"delete_time,omitempty"`
	// A generated tracking ID for this shipment.
	TrackingId string `protobuf:"bytes,7,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	// The location where the shipment is picked up. Supply when creating shipment if different from the sender location.
	PickupLocation *Location `protobuf:"bytes,8,opt,name=pickup_location,json=pickupLocation,proto3" json:"pickup_location,omitempty"`
	// Instructions for the pickup.
	PickupInstructions string `protobuf:"bytes,9,opt,name=pickup_instructions,json=pickupInstructions,proto3" json:"pickup_instructions,omitempty"`
	// The shipment should be picked up after this time
	RequestedPickupStartTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=requested_pickup_start_time,json=requestedPickupStartTime,proto3" json:"requested_pickup_start_time,omitempty"`
	// The shipment should be picked up before this time
	RequestedPickupEndTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=requested_pickup_end_time,json=requestedPickupEndTime,proto3" json:"requested_pickup_end_time,omitempty"`
	// The location where the shipment is delivered to.
	DeliveryLocation *Location `protobuf:"bytes,12,opt,name=delivery_location,json=deliveryLocation,proto3" json:"delivery_location,omitempty"`
	// Instructions for the delivery.
	DeliveryInstructions string `protobuf:"bytes,13,opt,name=delivery_instructions,json=deliveryInstructions,proto3" json:"delivery_instructions,omitempty"`
	// The shipment should be delivered after this time
	RequestedDeliveryStartTime *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=requested_delivery_start_time,json=requestedDeliveryStartTime,proto3" json:"requested_delivery_start_time,omitempty"`
	// The shipment should be delivered before this time
	RequestedDeliveryEndTime *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=requested_delivery_end_time,json=requestedDeliveryEndTime,proto3" json:"requested_delivery_end_time,omitempty"`
	// Shipment units
	Units []*Unit `protobuf:"bytes,16,rep,name=units,proto3" json:"units,omitempty"`
	// An external reference for this shipment.
	ExternalReferenceId string `protobuf:"bytes,17,opt,name=external_reference_id,json=externalReferenceId,proto3" json:"external_reference_id,omitempty"`
	// Resource name of the booking this shipment relates to.
	Booking string `protobuf:"bytes,18,opt,name=booking,proto3" json:"booking,omitempty"`
	// Shipment state
	// Can be set to ACTIVE (default) or RELEASED when creating a shipment.
	State Shipment_State `protobuf:"varint,19,opt,name=state,proto3,enum=einride.saga.extend.book.v1beta1.Shipment_State" json:"state,omitempty"`
	// Shipment delivery state
	DeliveryState Shipment_DeliveryState `protobuf:"varint,20,opt,name=delivery_state,json=deliveryState,proto3,enum=einride.saga.extend.book.v1beta1.Shipment_DeliveryState" json:"delivery_state,omitempty"`
}

func (x *Shipment) Reset() {
	*x = Shipment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Shipment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shipment) ProtoMessage() {}

func (x *Shipment) ProtoReflect() protoreflect.Message {
	mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shipment.ProtoReflect.Descriptor instead.
func (*Shipment) Descriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{0}
}

func (x *Shipment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Shipment) GetSpace() string {
	if x != nil {
		return x.Space
	}
	return ""
}

func (x *Shipment) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Shipment) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Shipment) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Shipment) GetDeleteTime() *timestamppb.Timestamp {
	if x != nil {
		return x.DeleteTime
	}
	return nil
}

func (x *Shipment) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *Shipment) GetPickupLocation() *Location {
	if x != nil {
		return x.PickupLocation
	}
	return nil
}

func (x *Shipment) GetPickupInstructions() string {
	if x != nil {
		return x.PickupInstructions
	}
	return ""
}

func (x *Shipment) GetRequestedPickupStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedPickupStartTime
	}
	return nil
}

func (x *Shipment) GetRequestedPickupEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedPickupEndTime
	}
	return nil
}

func (x *Shipment) GetDeliveryLocation() *Location {
	if x != nil {
		return x.DeliveryLocation
	}
	return nil
}

func (x *Shipment) GetDeliveryInstructions() string {
	if x != nil {
		return x.DeliveryInstructions
	}
	return ""
}

func (x *Shipment) GetRequestedDeliveryStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedDeliveryStartTime
	}
	return nil
}

func (x *Shipment) GetRequestedDeliveryEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.RequestedDeliveryEndTime
	}
	return nil
}

func (x *Shipment) GetUnits() []*Unit {
	if x != nil {
		return x.Units
	}
	return nil
}

func (x *Shipment) GetExternalReferenceId() string {
	if x != nil {
		return x.ExternalReferenceId
	}
	return ""
}

func (x *Shipment) GetBooking() string {
	if x != nil {
		return x.Booking
	}
	return ""
}

func (x *Shipment) GetState() Shipment_State {
	if x != nil {
		return x.State
	}
	return Shipment_STATE_UNSPECIFIED
}

func (x *Shipment) GetDeliveryState() Shipment_DeliveryState {
	if x != nil {
		return x.DeliveryState
	}
	return Shipment_DELIVERY_STATE_UNSPECIFIED
}

// A location is where goods are picked up or delivered.
type Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Address recipient
	AddressRecipient string `protobuf:"bytes,1,opt,name=address_recipient,json=addressRecipient,proto3" json:"address_recipient,omitempty"`
	// Address care of (C/O)
	AddressCo string `protobuf:"bytes,2,opt,name=address_co,json=addressCo,proto3" json:"address_co,omitempty"`
	// Address line 1
	AddressLine1 string `protobuf:"bytes,3,opt,name=address_line1,json=addressLine1,proto3" json:"address_line1,omitempty"`
	// Address line 2
	AddressLine2 string `protobuf:"bytes,4,opt,name=address_line2,json=addressLine2,proto3" json:"address_line2,omitempty"`
	// Address postal code
	AddressPostalCode string `protobuf:"bytes,5,opt,name=address_postal_code,json=addressPostalCode,proto3" json:"address_postal_code,omitempty"`
	// Address city
	AddressCity string `protobuf:"bytes,6,opt,name=address_city,json=addressCity,proto3" json:"address_city,omitempty"`
	// Address country code (ISO 3166-1 alpha-2
	// https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
	AddressCountryCode string `protobuf:"bytes,7,opt,name=address_country_code,json=addressCountryCode,proto3" json:"address_country_code,omitempty"`
	// Address state code
	AddressStateCode string `protobuf:"bytes,8,opt,name=address_state_code,json=addressStateCode,proto3" json:"address_state_code,omitempty"`
	// Location contact information.
	Contacts string `protobuf:"bytes,9,opt,name=contacts,proto3" json:"contacts,omitempty"`
	// The latitude of the location in degrees. It must be in the range [-90.0, +90.0].
	Latitude float64 `protobuf:"fixed64,10,opt,name=latitude,proto3" json:"latitude,omitempty"`
	// The longitude of the location in degrees. It must be in the range [-180.0, +180.0].
	Longitude float64 `protobuf:"fixed64,11,opt,name=longitude,proto3" json:"longitude,omitempty"`
}

func (x *Location) Reset() {
	*x = Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Location) ProtoMessage() {}

func (x *Location) ProtoReflect() protoreflect.Message {
	mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Location.ProtoReflect.Descriptor instead.
func (*Location) Descriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{1}
}

func (x *Location) GetAddressRecipient() string {
	if x != nil {
		return x.AddressRecipient
	}
	return ""
}

func (x *Location) GetAddressCo() string {
	if x != nil {
		return x.AddressCo
	}
	return ""
}

func (x *Location) GetAddressLine1() string {
	if x != nil {
		return x.AddressLine1
	}
	return ""
}

func (x *Location) GetAddressLine2() string {
	if x != nil {
		return x.AddressLine2
	}
	return ""
}

func (x *Location) GetAddressPostalCode() string {
	if x != nil {
		return x.AddressPostalCode
	}
	return ""
}

func (x *Location) GetAddressCity() string {
	if x != nil {
		return x.AddressCity
	}
	return ""
}

func (x *Location) GetAddressCountryCode() string {
	if x != nil {
		return x.AddressCountryCode
	}
	return ""
}

func (x *Location) GetAddressStateCode() string {
	if x != nil {
		return x.AddressStateCode
	}
	return ""
}

func (x *Location) GetContacts() string {
	if x != nil {
		return x.Contacts
	}
	return ""
}

func (x *Location) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *Location) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

// A unit is a holder of goods such as a EUR-pallet.
type Unit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Type of unit
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// External reference ID of the unit
	ExternalReferenceId string `protobuf:"bytes,2,opt,name=external_reference_id,json=externalReferenceId,proto3" json:"external_reference_id,omitempty"`
	// Description of the unit
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Unique unit tracking ID
	TrackingId string `protobuf:"bytes,4,opt,name=tracking_id,json=trackingId,proto3" json:"tracking_id,omitempty"`
	// Unit weight
	Weight *Unit_Weight `protobuf:"bytes,5,opt,name=weight,proto3" json:"weight,omitempty"`
	// Unit length
	Length *Unit_Length `protobuf:"bytes,6,opt,name=length,proto3" json:"length,omitempty"`
	// Unit height
	Height *Unit_Length `protobuf:"bytes,7,opt,name=height,proto3" json:"height,omitempty"`
	// Unit width
	Width *Unit_Length `protobuf:"bytes,8,opt,name=width,proto3" json:"width,omitempty"`
	// Unit volume
	Volume *Unit_Volume `protobuf:"bytes,9,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *Unit) Reset() {
	*x = Unit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit) ProtoMessage() {}

func (x *Unit) ProtoReflect() protoreflect.Message {
	mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit.ProtoReflect.Descriptor instead.
func (*Unit) Descriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2}
}

func (x *Unit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Unit) GetExternalReferenceId() string {
	if x != nil {
		return x.ExternalReferenceId
	}
	return ""
}

func (x *Unit) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Unit) GetTrackingId() string {
	if x != nil {
		return x.TrackingId
	}
	return ""
}

func (x *Unit) GetWeight() *Unit_Weight {
	if x != nil {
		return x.Weight
	}
	return nil
}

func (x *Unit) GetLength() *Unit_Length {
	if x != nil {
		return x.Length
	}
	return nil
}

func (x *Unit) GetHeight() *Unit_Length {
	if x != nil {
		return x.Height
	}
	return nil
}

func (x *Unit) GetWidth() *Unit_Length {
	if x != nil {
		return x.Width
	}
	return nil
}

func (x *Unit) GetVolume() *Unit_Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

// Weight specified in different units
type Unit_Weight struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Weight value
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// Weight unit
	Unit Unit_Weight_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=einride.saga.extend.book.v1beta1.Unit_Weight_Unit" json:"unit,omitempty"`
}

func (x *Unit_Weight) Reset() {
	*x = Unit_Weight{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit_Weight) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit_Weight) ProtoMessage() {}

func (x *Unit_Weight) ProtoReflect() protoreflect.Message {
	mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit_Weight.ProtoReflect.Descriptor instead.
func (*Unit_Weight) Descriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Unit_Weight) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Unit_Weight) GetUnit() Unit_Weight_Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_Weight_UNIT_UNSPECIFIED
}

// Length specified in different units
type Unit_Length struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Length value
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// Length unit
	Unit Unit_Length_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=einride.saga.extend.book.v1beta1.Unit_Length_Unit" json:"unit,omitempty"`
}

func (x *Unit_Length) Reset() {
	*x = Unit_Length{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit_Length) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit_Length) ProtoMessage() {}

func (x *Unit_Length) ProtoReflect() protoreflect.Message {
	mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit_Length.ProtoReflect.Descriptor instead.
func (*Unit_Length) Descriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Unit_Length) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Unit_Length) GetUnit() Unit_Length_Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_Length_UNIT_UNSPECIFIED
}

// Volume specified in different units
type Unit_Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Volume value
	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	// Volume unit
	Unit Unit_Volume_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=einride.saga.extend.book.v1beta1.Unit_Volume_Unit" json:"unit,omitempty"`
}

func (x *Unit_Volume) Reset() {
	*x = Unit_Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Unit_Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Unit_Volume) ProtoMessage() {}

func (x *Unit_Volume) ProtoReflect() protoreflect.Message {
	mi := &file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Unit_Volume.ProtoReflect.Descriptor instead.
func (*Unit_Volume) Descriptor() ([]byte, []int) {
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Unit_Volume) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Unit_Volume) GetUnit() Unit_Volume_Unit {
	if x != nil {
		return x.Unit
	}
	return Unit_Volume_UNIT_UNSPECIFIED
}

var File_einride_saga_extend_book_v1beta1_shipment_proto protoreflect.FileDescriptor

var file_einride_saga_extend_book_v1beta1_shipment_proto_rawDesc = []byte{
	0x0a, 0x2f, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73, 0x61, 0x67, 0x61, 0x2f, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x6f, 0x6f, 0x6b, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0x2f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x20, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf7, 0x0c, 0x0a, 0x08, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x03, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x05, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x24, 0xe2, 0x41, 0x01, 0x03, 0xfa, 0x41, 0x1d, 0x0a,
	0x1b, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x05, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x25, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x41, 0x1e, 0x0a, 0x1c, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x74,
	0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x53, 0x0a, 0x0f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x69,
	0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x49, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x59, 0x0a, 0x1b, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x18, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x55, 0x0a, 0x19, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x5f, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x16, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x5d, 0x0a, 0x11, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e,
	0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b,
	0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x15, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x5d,
	0x0a, 0x1d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x59, 0x0a,
	0x1b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x18,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x74,
	0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x05, 0x75, 0x6e, 0x69, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x15,
	0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x05, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x07, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e,
	0x67, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x42, 0x22, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x74,
	0x65, 0x63, 0x68, 0x2f, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x62, 0x6f, 0x6f,
	0x6b, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x30, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61,
	0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76,
	0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x65, 0x0a, 0x0e,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x38, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x04,
	0xe2, 0x41, 0x01, 0x03, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x38, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12,
	0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x44, 0x10, 0x02, 0x22, 0x5c, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x0a, 0x1a, 0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x59, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x49, 0x54, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x45, 0x4c, 0x49, 0x56, 0x45, 0x52, 0x45, 0x44, 0x10, 0x03, 0x3a, 0x5d, 0xea, 0x41, 0x5a,
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x74, 0x65, 0x63, 0x68, 0x2f, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x23, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x7d,
	0x2f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x7d, 0x2a, 0x09, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x32, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xc7, 0x03, 0x0a, 0x08, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x12, 0x29, 0x0a, 0x0d, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c,
	0x69, 0x6e, 0x65, 0x31, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6c, 0x69, 0x6e, 0x65, 0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x12, 0x34, 0x0a, 0x13, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x11, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0b, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x43, 0x69, 0x74, 0x79, 0x12, 0x36, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x12, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61,
	0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x22, 0xf1, 0x07, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x18, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c,
	0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x0b, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x64, 0x12, 0x4b, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x45, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61,
	0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62,
	0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
	0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62,
	0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x2e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x43, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52, 0x05, 0x77,
	0x69, 0x64, 0x74, 0x68, 0x12, 0x45, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x56, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0xa1, 0x01, 0x0a, 0x06,
	0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x32, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x2e,
	0x55, 0x6e, 0x69, 0x74, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x22, 0x2d, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06,
	0x0a, 0x02, 0x4b, 0x47, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x42, 0x53, 0x10, 0x02, 0x1a,
	0xa0, 0x01, 0x0a, 0x06, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73,
	0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e,
	0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04,
	0x75, 0x6e, 0x69, 0x74, 0x22, 0x2c, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x10,
	0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x43, 0x4d, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x49, 0x4e,
	0x10, 0x02, 0x1a, 0xa3, 0x01, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x4c, 0x0a, 0x04, 0x75, 0x6e, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64,
	0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f,
	0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x2e,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x2f, 0x0a, 0x04, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x14, 0x0a, 0x10, 0x55, 0x4e, 0x49, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x43, 0x42, 0x4d, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x43, 0x42, 0x46, 0x54, 0x10, 0x02, 0x42, 0xad, 0x02, 0x0a, 0x24, 0x63, 0x6f, 0x6d,
	0x2e, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x73, 0x61, 0x67, 0x61, 0x2e, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x2e, 0x62, 0x6f, 0x6f, 0x6b, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61,
	0x31, 0x42, 0x0d, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x01, 0x5a, 0x51, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x73, 0x61, 0x67, 0x61, 0x2f, 0x63, 0x6d, 0x64, 0x2f,
	0x73, 0x61, 0x67, 0x61, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x65, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65,
	0x2f, 0x73, 0x61, 0x67, 0x61, 0x2f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x2f, 0x62, 0x6f, 0x6f,
	0x6b, 0x2f, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x3b, 0x62, 0x6f, 0x6f, 0x6b, 0x76, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0xa2, 0x02, 0x04, 0x45, 0x53, 0x45, 0x42, 0xaa, 0x02, 0x20, 0x45,
	0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x53, 0x61, 0x67, 0x61, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x2e, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0xca,
	0x02, 0x20, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x53, 0x61, 0x67, 0x61, 0x5c, 0x45,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x5c, 0x42, 0x6f, 0x6f, 0x6b, 0x5c, 0x56, 0x31, 0x62, 0x65, 0x74,
	0x61, 0x31, 0xe2, 0x02, 0x2c, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x5c, 0x53, 0x61, 0x67,
	0x61, 0x5c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5c, 0x42, 0x6f, 0x6f, 0x6b, 0x5c, 0x56, 0x31,
	0x62, 0x65, 0x74, 0x61, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x24, 0x45, 0x69, 0x6e, 0x72, 0x69, 0x64, 0x65, 0x3a, 0x3a, 0x53, 0x61, 0x67,
	0x61, 0x3a, 0x3a, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x42, 0x6f, 0x6f, 0x6b, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescOnce sync.Once
	file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescData = file_einride_saga_extend_book_v1beta1_shipment_proto_rawDesc
)

func file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescGZIP() []byte {
	file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescOnce.Do(func() {
		file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescData = protoimpl.X.CompressGZIP(file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescData)
	})
	return file_einride_saga_extend_book_v1beta1_shipment_proto_rawDescData
}

var file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_einride_saga_extend_book_v1beta1_shipment_proto_goTypes = []interface{}{
	(Shipment_State)(0),           // 0: einride.saga.extend.book.v1beta1.Shipment.State
	(Shipment_DeliveryState)(0),   // 1: einride.saga.extend.book.v1beta1.Shipment.DeliveryState
	(Unit_Weight_Unit)(0),         // 2: einride.saga.extend.book.v1beta1.Unit.Weight.Unit
	(Unit_Length_Unit)(0),         // 3: einride.saga.extend.book.v1beta1.Unit.Length.Unit
	(Unit_Volume_Unit)(0),         // 4: einride.saga.extend.book.v1beta1.Unit.Volume.Unit
	(*Shipment)(nil),              // 5: einride.saga.extend.book.v1beta1.Shipment
	(*Location)(nil),              // 6: einride.saga.extend.book.v1beta1.Location
	(*Unit)(nil),                  // 7: einride.saga.extend.book.v1beta1.Unit
	(*Unit_Weight)(nil),           // 8: einride.saga.extend.book.v1beta1.Unit.Weight
	(*Unit_Length)(nil),           // 9: einride.saga.extend.book.v1beta1.Unit.Length
	(*Unit_Volume)(nil),           // 10: einride.saga.extend.book.v1beta1.Unit.Volume
	(*timestamppb.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_einride_saga_extend_book_v1beta1_shipment_proto_depIdxs = []int32{
	11, // 0: einride.saga.extend.book.v1beta1.Shipment.create_time:type_name -> google.protobuf.Timestamp
	11, // 1: einride.saga.extend.book.v1beta1.Shipment.update_time:type_name -> google.protobuf.Timestamp
	11, // 2: einride.saga.extend.book.v1beta1.Shipment.delete_time:type_name -> google.protobuf.Timestamp
	6,  // 3: einride.saga.extend.book.v1beta1.Shipment.pickup_location:type_name -> einride.saga.extend.book.v1beta1.Location
	11, // 4: einride.saga.extend.book.v1beta1.Shipment.requested_pickup_start_time:type_name -> google.protobuf.Timestamp
	11, // 5: einride.saga.extend.book.v1beta1.Shipment.requested_pickup_end_time:type_name -> google.protobuf.Timestamp
	6,  // 6: einride.saga.extend.book.v1beta1.Shipment.delivery_location:type_name -> einride.saga.extend.book.v1beta1.Location
	11, // 7: einride.saga.extend.book.v1beta1.Shipment.requested_delivery_start_time:type_name -> google.protobuf.Timestamp
	11, // 8: einride.saga.extend.book.v1beta1.Shipment.requested_delivery_end_time:type_name -> google.protobuf.Timestamp
	7,  // 9: einride.saga.extend.book.v1beta1.Shipment.units:type_name -> einride.saga.extend.book.v1beta1.Unit
	0,  // 10: einride.saga.extend.book.v1beta1.Shipment.state:type_name -> einride.saga.extend.book.v1beta1.Shipment.State
	1,  // 11: einride.saga.extend.book.v1beta1.Shipment.delivery_state:type_name -> einride.saga.extend.book.v1beta1.Shipment.DeliveryState
	8,  // 12: einride.saga.extend.book.v1beta1.Unit.weight:type_name -> einride.saga.extend.book.v1beta1.Unit.Weight
	9,  // 13: einride.saga.extend.book.v1beta1.Unit.length:type_name -> einride.saga.extend.book.v1beta1.Unit.Length
	9,  // 14: einride.saga.extend.book.v1beta1.Unit.height:type_name -> einride.saga.extend.book.v1beta1.Unit.Length
	9,  // 15: einride.saga.extend.book.v1beta1.Unit.width:type_name -> einride.saga.extend.book.v1beta1.Unit.Length
	10, // 16: einride.saga.extend.book.v1beta1.Unit.volume:type_name -> einride.saga.extend.book.v1beta1.Unit.Volume
	2,  // 17: einride.saga.extend.book.v1beta1.Unit.Weight.unit:type_name -> einride.saga.extend.book.v1beta1.Unit.Weight.Unit
	3,  // 18: einride.saga.extend.book.v1beta1.Unit.Length.unit:type_name -> einride.saga.extend.book.v1beta1.Unit.Length.Unit
	4,  // 19: einride.saga.extend.book.v1beta1.Unit.Volume.unit:type_name -> einride.saga.extend.book.v1beta1.Unit.Volume.Unit
	20, // [20:20] is the sub-list for method output_type
	20, // [20:20] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_einride_saga_extend_book_v1beta1_shipment_proto_init() }
func file_einride_saga_extend_book_v1beta1_shipment_proto_init() {
	if File_einride_saga_extend_book_v1beta1_shipment_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Shipment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit_Weight); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit_Length); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Unit_Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_einride_saga_extend_book_v1beta1_shipment_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_einride_saga_extend_book_v1beta1_shipment_proto_goTypes,
		DependencyIndexes: file_einride_saga_extend_book_v1beta1_shipment_proto_depIdxs,
		EnumInfos:         file_einride_saga_extend_book_v1beta1_shipment_proto_enumTypes,
		MessageInfos:      file_einride_saga_extend_book_v1beta1_shipment_proto_msgTypes,
	}.Build()
	File_einride_saga_extend_book_v1beta1_shipment_proto = out.File
	file_einride_saga_extend_book_v1beta1_shipment_proto_rawDesc = nil
	file_einride_saga_extend_book_v1beta1_shipment_proto_goTypes = nil
	file_einride_saga_extend_book_v1beta1_shipment_proto_depIdxs = nil
}
