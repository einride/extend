swagger: "2.0"
info:
  title: 'Einride Extend: Book API'
  description: |
    Based on REST principles, with optional support for gRPC, the Einride Extend Book API enables modern API-based integration to Einride Saga for transport booking.

    API design
    ----------

    The Einride Extend APIs are designed using the [AIP](https://aip.dev) design framework, which means that they are resource-oriented and work like standard [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.

    ### Resource-oriented design

    *See also: [AIP-121: Resource-oriented design](https://google.aip.dev/121)*

    The fundamental building blocks of this API are individually-named resources (nouns) and the relationships and hierarchy that exist between them.

    A number of standard methods (verbs) provide the semantics for common [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations. Custom methods are available where custom operations are required, such as for cancelling shipments.

    ### Resource names

    *See also: [AIP-122: Resource names](https://google.aip.dev/122)*

    This API exposes resources which users are able to create, retrieve, and manipulate. Resources are named: each resource has a unique identifier that users use to reference that resource, and these names are what users should store as the canonical names for the resources.

    As such, the unique identifier for a resource in this API is called a *resource name*.

    Protocols
    ---------

    The Einride Extend APIs support both HTTP and gRPC protocols.

    ### HTTP

    The Einride Extend APIs are available as RESTful HTTP endpoints.

    See this document for the OpenAPI specifications, or use the API documentation at [extend.saga.einride.tech](https://extend.saga.einride.tech), where you can also try out the REST APIs and make example requests.

    ### gRPC

    [gRPC](https://grpc.io) is a high performance, open source universal RPC framework that works across programming languages and platforms.

    To for more information about using Einride Extend APIs via gRPC, please contact your Einride representative.

    Authentication
    ---------

    The Einride Extend use standard [Bearer token authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/). When using the HTTP APIs, make sure to always provide the following header in all requests:


        Authorization: Bearer <token>


    Where `<token>` is the authentication token for your integration. Please contact your Einride representative to obtain an authentication token for your integration.

    API address
    ---------

    The Einride Extend API is available via the following root address:

    https://api.saga.einride.tech
  version: v1beta1
tags:
- name: BookService
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /v1beta1/{location}:
    get:
      summary: Get a shipping location.
      description: This is an AIP standard [Get](https://google.aip.dev/131) method.
      operationId: BookService_GetLocation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bookv1beta1Location'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: location
        description: The resource name of the shipping location to retrieve.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+/locations/[^/]+
      tags:
      - BookService
  /v1beta1/{name}:cancel:
    post:
      summary: Cancel a shipment.
      description: |-
        The state of the shipment after canceling is CANCELLED.

        This is an AIP [state](https://google.aip.dev/216) transition method.
      operationId: BookService_CancelShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: shipment
        description: The resource name of the shipment to cancel.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+/shipments/[^/]+
      - name: body
        in: body
        required: true
        schema:
          type: object
          description: Request message for BookService.CancelShipment.
      tags:
      - BookService
  /v1beta1/{shipment}:
    get:
      summary: Get a shipment.
      description: This is an AIP standard [Get](https://google.aip.dev/131) method.
      operationId: BookService_GetShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: shipment
        description: The resource name of the shipment to retrieve.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+/shipments/[^/]+
      tags:
      - BookService
  /v1beta1/{space}/locations:
    get:
      summary: List shipping locations in a space.
      description: This is an AIP standard [List](https://google.aip.dev/132) method.
      operationId: BookService_ListLocations
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1ListLocationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: space
        description: The parent space in which to list shipping locations.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+
      - name: pageSize
        description: |-
          The requested page size.

          The server may return fewer locations than requested. If unspecified, the
          server will pick an appropriate default.
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: |-
          A token identifying a page of results the server should return.

          Typically, this is the value of next_page_token returned from the previous
          call to list shipping locations.
        in: query
        required: false
        type: string
      tags:
      - BookService
    post:
      summary: Create a shipping location in a space.
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: BookService_CreateLocation
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/bookv1beta1Location'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: space
        description: The parent space in which to create the shipping location.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+
      - name: location
        description: The shipping location to create.
        in: body
        required: true
        schema:
          $ref: '#/definitions/bookv1beta1Location'
      tags:
      - BookService
  /v1beta1/{space}/shipments:
    get:
      summary: List shipments in a space.
      description: This is an AIP standard [List](https://google.aip.dev/132) method.
      operationId: BookService_ListShipments
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1ListShipmentsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: space
        description: The parent space in which to list shipments.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+
      - name: pageSize
        description: |-
          The requested page size.

          The server may return fewer shipments than requested. If unspecified, the
          server will pick an appropriate default.
        in: query
        required: false
        type: integer
        format: int32
      - name: pageToken
        description: |-
          A token identifying a page of results the server should return.

          Typically, this is the value of next_page_token returned from the previous
          call to list shipments.
        in: query
        required: false
        type: string
      tags:
      - BookService
    post:
      summary: Create a shipment in a space.
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: BookService_CreateShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
      - name: space
        description: The parent space in which to create the shipment.
        in: path
        required: true
        type: string
        pattern: spaces/[^/]+
      - name: shipment
        description: The shipment to create.
        in: body
        required: true
        schema:
          $ref: '#/definitions/v1beta1Shipment'
      tags:
      - BookService
definitions:
  bookv1beta1Location:
    type: object
    properties:
      name:
        type: string
        description: The resource name of the shipping location.
        readOnly: true
      space:
        type: string
        description: Resource name of the space that owns the shipping location.
        readOnly: true
      deleted:
        type: boolean
        description: Indicates if the shipping location is deleted.
        readOnly: true
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the shipping location.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the shipping location.
          Updated when create/update/delete operation is performed.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the shipping location.
        readOnly: true
      etag:
        type: string
        description: |-
          This checksum is computed by the server based on the value of other
          fields, and may be sent on update and delete requests to ensure the
          client has an up-to-date value before proceeding.
        readOnly: true
      creatorUser:
        type: string
        description: Resource name of the user who created the shipping location,
          if it was created manually.
        readOnly: true
      creatorOrganization:
        type: string
        description: Resource name of the organization for which the user created
          the shipping location, if it was created manually.
        readOnly: true
      displayName:
        type: string
        description: The display name of the location.
        required:
        - displayName
      address:
        $ref: '#/definitions/v1beta1Address'
        description: The address of the location.
      comment:
        type: string
        description: A comment about this location.
      contacts:
        type: string
        description: Contacts regarding this location.
      externalReferenceId:
        type: string
        description: An external reference for this location.
      latLng:
        $ref: '#/definitions/typeLatLng'
        description: The geographic location of the location.
    description: A shipping location represents a physical place where shipments can
      be picked up or delivered to.
    required:
    - displayName
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
  typeLatLng:
    type: object
    properties:
      latitude:
        type: number
        format: double
        description: The latitude in degrees. It must be in the range [-90.0, +90.0].
      longitude:
        type: number
        format: double
        description: The longitude in degrees. It must be in the range [-180.0, +180.0].
    description: |-
      An object that represents a latitude/longitude pair. This is expressed as a
      pair of doubles to represent degrees latitude and degrees longitude. Unless
      specified otherwise, this must conform to the
      <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
      standard</a>. Values must be within normalized ranges.
  v1beta1Address:
    type: object
    properties:
      referenceId:
        type: string
        title: Address reference ID
      recipient:
        type: string
        title: Address recipient
        required:
        - recipient
      co:
        type: string
        title: Address care of (C/O)
      addressLine1:
        type: string
        title: Address line 1
        required:
        - addressLine1
      addressLine2:
        type: string
        title: Address line 2
      postalCode:
        type: string
        title: Address postal code
        required:
        - postalCode
      city:
        type: string
        title: Address city
        required:
        - city
      regionCode:
        type: string
        title: Address region code
        required:
        - regionCode
    title: Address
    required:
    - recipient
    - addressLine1
    - postalCode
    - city
    - regionCode
  v1beta1ListLocationsResponse:
    type: object
    properties:
      locations:
        type: array
        items:
          $ref: '#/definitions/bookv1beta1Location'
        description: The current page of shipping locations being listed.
      nextPageToken:
        type: string
        description: |-
          A token to retrieve next page of results.

          Pass this value in the page_token field in the subsequent call to
          list shipping locations to retrieve the next page of results.
    description: Response message for BookService.ListLocations.
  v1beta1ListShipmentsResponse:
    type: object
    properties:
      shipments:
        type: array
        items:
          $ref: '#/definitions/v1beta1Shipment'
        description: The current page of shipments being listed.
      nextPageToken:
        type: string
        description: |-
          A token to retrieve next page of results.

          Pass this value in the page_token field in the subsequent call to list
          shipments to retrieve the next page of results.
    description: Response message for BookService.ListShipments.
  v1beta1Shipment:
    type: object
    properties:
      name:
        type: string
        description: The resource name of the shipment.
        readOnly: true
      space:
        type: string
        description: Resource name of the space that owns the shipment.
        readOnly: true
      deleted:
        type: boolean
        description: Indicates if the shipment is deleted.
        readOnly: true
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the shipment.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the shipment.
          Updated when create/update/delete operation is performed.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the shipment.
        readOnly: true
      etag:
        type: string
        description: |-
          This checksum is computed by the server based on the value of other
          fields, and may be sent on update and delete requests to ensure the
          client has an up-to-date value before proceeding.
        readOnly: true
      creatorUser:
        type: string
        description: Resource name of the user who created the shipment, if it was
          created manually.
        readOnly: true
      creatorOrganization:
        type: string
        description: Resource name of the organization for which the user created
          the shipment, if it was created manually.
        readOnly: true
      creatorOrigin:
        type: string
        title: Origin from where the shipment was created, e.g. BOOK_APP, DELIVER_APP,
          BOOKCTL
        readOnly: true
      externalReferenceId:
        type: string
        description: An external reference for this shipment.
      stops:
        type: array
        items:
          $ref: '#/definitions/v1beta1Stop'
        title: Shipment stops
      units:
        type: array
        items:
          $ref: '#/definitions/v1beta1Unit'
        title: Shipment units
      state:
        $ref: '#/definitions/v1beta1ShipmentState'
        title: Shipment state
    description: A shipment represents a demand to deliver goods from an origin to
      a destination.
  v1beta1ShipmentState:
    type: string
    enum:
    - ACTIVE
    - RELEASED
    - CANCELLED
    description: |-
      - STATE_UNSPECIFIED: Unspecified shipment state.
       - ACTIVE: Shipment is active and open for modification (initial state).
       - RELEASED: Shipment is ready for pickup.
       - CANCELLED: Shipment is cancelled.
    title: Shipment state
  v1beta1Stop:
    type: object
    properties:
      id:
        type: string
        description: The id of the stop.
        readOnly: true
      location:
        type: string
        description: The location resource name of the stop.
      address:
        $ref: '#/definitions/v1beta1Address'
        description: The address of the stop.
      type:
        $ref: '#/definitions/v1beta1StopType'
        description: Type of stop.
      instructions:
        type: string
        description: Instructions on the stop, for example which trailer to pick up
          or park the trailer at space 123 at lot B.
      state:
        $ref: '#/definitions/v1beta1StopState'
        description: State of the stop.
      unitIds:
        type: array
        items:
          type: string
        description: IDs of units picked up or delivered at stop.
        readOnly: true
    description: A stop is where goods are picked up or delivered.
  v1beta1StopState:
    type: string
    enum:
    - AWAITING
    - IN_PROGRESS
    - DONE
    description: |-
      - STATE_UNSPECIFIED: Unspecified stop state
       - AWAITING: Stop is not reached yet
       - IN_PROGRESS: Stop is in progress, goods are currently delivered or picked up.
       - DONE: Stop is done, goods are delivered or picked up.
    title: Stop state
  v1beta1StopType:
    type: string
    enum:
    - PICKUP
    - DELIVER
    description: |-
      - TYPE_UNSPECIFIED: Unspecified stop type
       - PICKUP: Stop where goods are picked up
       - DELIVER: Stop where goods are delivered
    title: Stop type
  v1beta1Unit:
    type: object
    properties:
      id:
        type: string
        title: The id of the unit
        readOnly: true
      type:
        type: string
        title: Type of unit
        required:
        - type
      trackingId:
        type: string
        title: Unique tracking ID
        readOnly: true
      weightKg:
        type: number
        format: float
        title: Weight in kilograms
      externalReference:
        type: string
        title: External reference
      description:
        type: string
        title: Description of the unit
      pickupStopId:
        type: string
        title: ID of stop where unit is picked up
        readOnly: true
      deliverStopId:
        type: string
        title: ID of stop where unit is delivered
        readOnly: true
    description: A unit is a holder of goods such as a EUR-pallet.
    required:
    - type
securityDefinitions:
  Authorization:
    type: apiKey
    name: authorization
    in: header
security:
- Authorization: []
