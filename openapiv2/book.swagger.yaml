swagger: "2.0"
info:
  title: 'Einride Extend: Shipment API'
  description: |
    Based on REST principles, with optional support for gRPC, the Einride Extend Shipment API enables modern API-based integration to Einride Saga for transport booking.

    API design
    ----------

    The Einride Extend APIs are designed using the [AIP](https://aip.dev) design framework, which means that they are resource-oriented and work like standard [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.

    ### Resource-oriented design

    *See also: [AIP-121: Resource-oriented design](https://google.aip.dev/121)*

    The fundamental building blocks of this API are individually-named resources (nouns) and the relationships and hierarchy that exist between them.

    A number of standard methods (verbs) provide the semantics for common [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations. Custom methods are available where custom operations are required, such as for cancelling shipments.

    ### Resource names

    *See also: [AIP-122: Resource names](https://google.aip.dev/122)*

    This API exposes resources which users are able to create, retrieve, and manipulate. Resources are named: each resource has a unique identifier that users use to reference that resource, and these names are what users should store as the canonical names for the resources.

    As such, the unique identifier for a resource in this API is called a *resource name*.

    Protocols
    ---------

    The Einride Extend APIs support both HTTP and gRPC protocols.

    ### HTTP

    The Einride Extend APIs are available as RESTful HTTP endpoints.

    See this document for the OpenAPI specifications, or use the API documentation at [extend.saga.einride.tech](https://extend.saga.einride.tech), where you can also try out the REST APIs and make example requests.

    ### gRPC

    [gRPC](https://grpc.io) is a high performance, open source universal RPC framework that works across programming languages and platforms.

    To for more information about using Einride Extend APIs via gRPC, please contact your Einride representative.

    Authentication
    ---------

    The Einride Extend use standard [Bearer token authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/). When using the HTTP APIs, make sure to always provide the following header in all requests:


        Authorization: Bearer <token>


    Where `<token>` is the authentication token for your integration. Please contact your Einride representative to obtain an authentication token for your integration.

    API address
    ---------

    The Einride Extend API is available via the following root address:

    https://api.saga.einride.tech
  version: v1beta1
tags:
  - name: ShipmentService
  - name: BookingService
  - name: ShipmentTrackingEventService
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1beta1/{booking}:
    get:
      summary: Get a booking.
      description: This is an AIP standard [Get](https://google.aip.dev/131) method.
      operationId: BookingService_GetBooking
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Booking'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: booking
          description: The resource name of the booking to retrieve.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/bookings/[^/]+
      tags:
        - BookingService
  /v1beta1/{parent}/trackingEvents:
    get:
      summary: |-
        List shipment tracking events for a shipment.
        The events are ordered by ascending occurred_time.
      description: 'See: https://google.aip.dev/132 (Standard methods: List).'
      operationId: ShipmentTrackingEventService_ListShipmentTrackingEvents
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1ListShipmentTrackingEventsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: parent
          description: |-
            The resource name of the parent, which owns this collection of shipment tracking events.
            Format: spaces/{space}/shipments/{shipment}/trackingEvents
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
        - name: pageSize
          description: |-
            Requested page size. Server may return fewer shipment tracking events than requested.
            If unspecified, server will pick an appropriate default.
          in: query
          required: false
          type: integer
          format: int32
        - name: pageToken
          description: |-
            A token identifying a page of results the server should return.
            Typically, this is the value of
            [ListShipmentTrackingEventsResponse.page_token][einride.saga.extend.book.v1beta1.ListShipmentTrackingEventsResponse.page_token]
            returned from the previous call to `ListShipmentTrackingEvents` method.
          in: query
          required: false
          type: string
      tags:
        - ShipmentTrackingEventService
  /v1beta1/{shipment}:
    get:
      summary: Get a shipment.
      description: This is an AIP standard [Get](https://google.aip.dev/131) method.
      operationId: ShipmentService_GetShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipment
          description: The resource name of the shipment to retrieve.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
      tags:
        - ShipmentService
  /v1beta1/{shipment}/trackingEvents:
    post:
      summary: Create a tracking event for a shipment
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: ShipmentTrackingEventService_CreateShipmentTrackingEvent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1ShipmentTrackingEvent'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipment
          description: The parent shipment in which to create the event.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
        - name: shipmentTrackingEvent
          description: The shipment tracking event
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1beta1ShipmentTrackingEvent'
            required:
              - shipmentTrackingEvent
      tags:
        - ShipmentTrackingEventService
  /v1beta1/{shipment}:release:
    post:
      summary: Release a shipment.
      description: |-
        The state of the shipment after releasing it is RELEASED.

        This is an AIP [state](https://google.aip.dev/216) transition method.
      operationId: ShipmentService_ReleaseShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipment
          description: The resource name of the shipment to release.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: Request message for BookService.ReleaseShipment.
      tags:
        - ShipmentService
  /v1beta1/{shipmentTrackingEvent}:
    get:
      summary: Get a shipment tracking event.
      description: This is an AIP standard [Get](https://google.aip.dev/131) method.
      operationId: ShipmentTrackingEventService_GetShipmentTrackingEvent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1ShipmentTrackingEvent'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipmentTrackingEvent
          description: |-
            The resource name of the shipment tracking event to retrieve.
            Format: spaces/{space}/shipments/{shipment}/trackingEvents/{shipmentTrackingEvent}
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+/trackingEvents/[^/]+
      tags:
        - ShipmentTrackingEventService
  /v1beta1/{space}/bookings:
    post:
      summary: Create a booking in a space.
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: BookingService_CreateBooking
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Booking'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: space
          description: The parent space in which to create the booking.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+
        - name: booking
          description: The booking to create.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1beta1Booking'
            required:
              - booking
      tags:
        - BookingService
  /v1beta1/{space}/shipments:
    post:
      summary: Create a shipment in a space.
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: ShipmentService_CreateShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: space
          description: The parent space in which to create the shipment.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+
        - name: shipment
          description: The shipment to create.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1beta1Shipment'
            required:
              - shipment
      tags:
        - ShipmentService
  /v1beta1/bookings:
    post:
      summary: |-
        Create a booking for a sender without specifying space in the URL.
        Booking parent space is deduced from the sender field in the booking.
      description: |-
        This is an AIP standard [Create](https://google.aip.dev/133) method.
        (-- api-linter: core::0133::http-uri-parent=disabled
        (-- api-linter: core::0133::method-signature=disabled
        (-- api-linter: client-libraries::4232::required-fields=disabled
            aip.dev/not-precedent: We need to do this in order to have a static URL without specifying space. --)
      operationId: BookingService_CreateBookingSpaceless
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Booking'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: booking
          description: The booking to create.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1beta1Booking'
            required:
              - booking
      tags:
        - BookingService
definitions:
  BookingAutomationRule:
    type: string
    enum:
      - CREATE_SHIPMENTS
      - CREATE_AND_RELEASE_SHIPMENTS
    description: |-
      The rule that is applied when a confirmed booking is accepted.

       - AUTOMATION_RULE_UNSPECIFIED: Unspecified auto rule.
       - CREATE_SHIPMENTS: When the confirmed booking is accepted, shipments will be created automatically from its stops and units.
       - CREATE_AND_RELEASE_SHIPMENTS: When the confirmed booking is accepted, shipments will be created automatically from its stops and units
      and then released.
  BookingBookingType:
    type: string
    enum:
      - PROVISIONAL
      - CONFIRMED
    description: |-
      The booking type.

       - BOOKING_TYPE_UNSPECIFIED: Unspecified booking type
       - PROVISIONAL: The booking is provisional and can be updated.
       - CONFIRMED: The booking is confirmed and can not be updated.
  BookingServiceType:
    type: string
    enum:
      - FULL_TRUCK_LOAD
      - DISTRIBUTION
      - SHUTTLE
      - MILK_RUN
    description: |-
      The service type of the booking.

       - SERVICE_TYPE_UNSPECIFIED: Unspecified service type.
       - FULL_TRUCK_LOAD: Service type FTL.
       - DISTRIBUTION: Service type distribution.
       - SHUTTLE: Service type shuttle.
       - MILK_RUN: Service type milk run.
  BookingStop:
    type: object
    properties:
      address:
        $ref: '#/definitions/v1beta1Address'
        description: The address of this stop.
      instructions:
        type: string
        description: Instructions for this stop.
      requestedEndTime:
        type: string
        format: date-time
        description: The latest time to depart this stop.
      requestedStartTime:
        type: string
        format: date-time
        description: The earliest time to arrive this stop.
      stopType:
        $ref: '#/definitions/BookingStopType'
        description: The type of stop.
      unitExternalReferenceIds:
        type: array
        items:
          type: string
        description: The unit external reference id associated with this stop. E.g. for a pickup stop this will hold the units to pickup.
    description: |-
      A stop is an address where an event is going to happen. The event could be
      to deliver goods, charge the vehicle etc.
    required:
      - address
      - stopType
      - unitExternalReferenceIds
  BookingStopType:
    type: string
    enum:
      - PICKUP
      - DELIVER
    description: |-
      Type describes the reason for the stop. E.g. a stop to deliver or pickup.

       - TYPE_UNSPECIFIED: Unknown type.
       - PICKUP: Stop to pick up goods.
       - DELIVER: Stop to deliver goods.
  ShipmentDeliveryState:
    type: string
    enum:
      - AWAITING
      - IN_TRANSIT
      - DELIVERED
    description: |-
      - DELIVERY_STATE_UNSPECIFIED: Unspecified shipment delivery state
       - AWAITING: Shipment delivery hasn't started
       - IN_TRANSIT: Shipment is in transit
       - DELIVERED: Shipment is delivered
    title: Shipment delivery state
  ShipmentTrackingEventEventCode:
    type: string
    enum:
      - ARRIVED_AT_PICKUP
      - DEPARTED_PICKUP
      - ARRIVED_AT_DELIVERY
      - DEPARTED_DELIVERY
      - STARTED_AT_PICKUP
      - COMPLETED_PICKUP
      - STARTED_AT_DELIVERY
      - COMPLETED_DELIVERY
    description: |-
      - EVENT_CODE_UNSPECIFIED: Unspecified
       - ARRIVED_AT_PICKUP: Arrived at pickup.
       - DEPARTED_PICKUP: Departed pickup.
       - ARRIVED_AT_DELIVERY: Arrived at delivery.
       - DEPARTED_DELIVERY: Departed delivery.
       - STARTED_AT_PICKUP: Started at pickup.
       - COMPLETED_PICKUP: Completed pickup.
       - STARTED_AT_DELIVERY: Started at delivery.
       - COMPLETED_DELIVERY: Completed delivery.
    title: Event code
  UnitLength:
    type: object
    properties:
      unit:
        $ref: '#/definitions/UnitLengthUnit'
        title: Length unit
      value:
        type: number
        format: double
        title: Length value
    title: Length specified in different units
    required:
      - value
      - unit
  UnitLengthUnit:
    type: string
    enum:
      - CM
      - IN
    description: |-
      - UNIT_UNSPECIFIED: Unspecified unit
       - CM: Centimeters
       - IN: Inches
    title: Length units
  UnitVolume:
    type: object
    properties:
      unit:
        $ref: '#/definitions/UnitVolumeUnit'
        title: Volume unit
      value:
        type: number
        format: double
        title: Volume value
    title: Volume specified in different units
    required:
      - value
      - unit
  UnitVolumeUnit:
    type: string
    enum:
      - CBM
      - CBFT
    description: |-
      - UNIT_UNSPECIFIED: Unspecified unit
       - CBM: Cubic meters
       - CBFT: Cubic feet
    title: Volume units
  UnitWeight:
    type: object
    properties:
      unit:
        $ref: '#/definitions/UnitWeightUnit'
        title: Weight unit
      value:
        type: number
        format: double
        title: Weight value
    title: Weight specified in different units
    required:
      - value
      - unit
  UnitWeightUnit:
    type: string
    enum:
      - KG
      - LBS
    description: |-
      - UNIT_UNSPECIFIED: Unspecified unit
       - KG: Kilograms
       - LBS: Pounds
    title: Weight units
  bookv1beta1Unit:
    type: object
    properties:
      description:
        type: string
        title: Description of the unit
      externalReferenceId:
        type: string
        title: External reference ID of the unit
      height:
        $ref: '#/definitions/UnitLength'
        title: Unit height
      length:
        $ref: '#/definitions/UnitLength'
        title: Unit length
      trackingId:
        type: string
        title: Unique unit tracking ID
        readOnly: true
      type:
        type: string
        title: Type of unit
      volume:
        $ref: '#/definitions/UnitVolume'
        title: Unit volume
      weight:
        $ref: '#/definitions/UnitWeight'
        title: Unit weight
      width:
        $ref: '#/definitions/UnitLength'
        title: Unit width
    description: A unit is a holder of goods such as a EUR-pallet.
    required:
      - type
      - weight
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
      message:
        type: string
  typeLatLng:
    type: object
    properties:
      latitude:
        type: number
        format: double
        description: The latitude in degrees. It must be in the range [-90.0, +90.0].
      longitude:
        type: number
        format: double
        description: The longitude in degrees. It must be in the range [-180.0, +180.0].
    description: |-
      An object that represents a latitude/longitude pair. This is expressed as a
      pair of doubles to represent degrees latitude and degrees longitude. Unless
      specified otherwise, this must conform to the
      <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
      standard</a>. Values must be within normalized ranges.
  v1beta1Address:
    type: object
    properties:
      city:
        type: string
        title: City
      co:
        type: string
        title: Care of (C/O)
      contactInfo:
        type: string
        title: Contact information
      displayName:
        type: string
        title: The displayed name of the address
      latLng:
        $ref: '#/definitions/typeLatLng'
        title: The geographic location of the address
      line1:
        type: string
        title: Address line 1
      line2:
        type: string
        title: Address line 2
      postalCode:
        type: string
        title: Postal code
      recipient:
        type: string
        title: Recipient
      regionCode:
        type: string
        title: |-
          Region code (Unicode CLDR region code)
          https://cldr.unicode.org/
      stateCode:
        type: string
        title: State code
    description: An Address is where goods are picked up or delivered.
    required:
      - recipient
      - line1
      - postalCode
      - city
      - regionCode
  v1beta1Booking:
    type: object
    properties:
      automationRule:
        $ref: '#/definitions/BookingAutomationRule'
        description: The rule that is applied when a confirmed booking is accepted. Defaults to no auto rule.
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the booking.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the booking. Set if the booking is deleted.
        readOnly: true
      externalReferenceId:
        type: string
        description: External reference ID is a unique identifier that can be set by the client.
      name:
        type: string
        description: The resource name of the booking.
      sender:
        type: string
        description: Resource name of the sender of the booking.
      serviceType:
        $ref: '#/definitions/BookingServiceType'
        description: The type of service to create a booking for.
      space:
        type: string
        description: Resource name of the space that owns the booking.
        readOnly: true
      state:
        $ref: '#/definitions/v1beta1BookingState'
        description: |-
          The state of the booking. Set to PENDING upon creation.
          A booking is then either accepted or rejected.
        readOnly: true
      stops:
        type: array
        items:
          $ref: '#/definitions/BookingStop'
        description: The stops included in this booking.
      trackingId:
        type: string
        description: Tracking ID for the booking.
        readOnly: true
      type:
        $ref: '#/definitions/BookingBookingType'
        description: Booking type. Defaults to PROVISIONAL.
      units:
        type: array
        items:
          $ref: '#/definitions/bookv1beta1Unit'
        description: The units included in this booking.
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the booking.
          Updated when create/update/delete operation is performed.
        readOnly: true
    description: A booking represents an estimated demand to deliver goods.
    required:
      - sender
      - serviceType
      - units
      - stops
  v1beta1BookingState:
    type: string
    enum:
      - PENDING
      - ACCEPTED
      - REJECTED
    description: |-
      The state of the booking.

       - STATE_UNSPECIFIED: Unspecified state
       - PENDING: The booking is received. Awaiting accept/reject.
       - ACCEPTED: The booking is accepted.
       - REJECTED: The booking is rejected.
  v1beta1ListShipmentTrackingEventsResponse:
    type: object
    properties:
      nextPageToken:
        type: string
        description: |-
          A token to retrieve next page of results.  Pass this value in the
          [ListShipmentTrackingEventsRequest.page_token][einride.saga.extend.book.v1beta1.ListShipmentTrackingEventsRequest.page_token]
          field in the subsequent call to `ListShipmentTrackingEvents` method to retrieve the next
          page of results.
      shipmentTrackingEvents:
        type: array
        items:
          $ref: '#/definitions/v1beta1ShipmentTrackingEvent'
        description: The list of shipment tracking events.
    description: Response message for ShipmentTrackingEventService.ListShipmentTrackingEvents.
  v1beta1Shipment:
    type: object
    properties:
      booking:
        type: string
        description: Resource name of the booking this shipment relates to.
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the shipment.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the shipment. Set if the shipment is deleted.
        readOnly: true
      deliveryAddress:
        $ref: '#/definitions/v1beta1Address'
        description: The address where the shipment is delivered to.
      deliveryInstructions:
        type: string
        description: Instructions for the delivery.
      deliveryState:
        $ref: '#/definitions/ShipmentDeliveryState'
        title: Shipment delivery state
        readOnly: true
      externalReferenceId:
        type: string
        description: An external reference for this shipment.
      name:
        type: string
        description: The resource name of the shipment.
        readOnly: true
      pickupAddress:
        $ref: '#/definitions/v1beta1Address'
        description: |-
          The address where the shipment is picked up.
          Supply when creating shipment if different from the sender default pickup address.
      pickupInstructions:
        type: string
        description: Instructions for the pickup.
      requestedDeliveryEndTime:
        type: string
        format: date-time
        title: The shipment should be delivered before this time
      requestedDeliveryStartTime:
        type: string
        format: date-time
        title: The shipment should be delivered after this time
      requestedPickupEndTime:
        type: string
        format: date-time
        title: The shipment should be picked up before this time
      requestedPickupStartTime:
        type: string
        format: date-time
        title: The shipment should be picked up after this time
      sender:
        type: string
        description: Resource name of the sender of the shipment.
      space:
        type: string
        description: Resource name of the space that owns the shipment.
        readOnly: true
      state:
        $ref: '#/definitions/v1beta1ShipmentState'
        description: |-
          Shipment state
          Can be set to ACTIVE (default) or RELEASED when creating a shipment.
      trackingId:
        type: string
        description: A generated tracking ID for this shipment.
        readOnly: true
      units:
        type: array
        items:
          $ref: '#/definitions/bookv1beta1Unit'
        title: Shipment units
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the shipment.
          Updated when create/update/delete operation is performed.
        readOnly: true
    description: A shipment represents a demand to deliver goods from an origin to a destination.
    required:
      - sender
      - deliveryAddress
      - units
  v1beta1ShipmentState:
    type: string
    enum:
      - ACTIVE
      - RELEASED
    description: |-
      - STATE_UNSPECIFIED: Unspecified shipment state.
       - ACTIVE: Shipment is active (initial state).
       - RELEASED: Shipment is ready for pickup.
    title: Shipment state
  v1beta1ShipmentTrackingEvent:
    type: object
    properties:
      address:
        $ref: '#/definitions/v1beta1Address'
        description: The address where the event happened.
      code:
        $ref: '#/definitions/ShipmentTrackingEventEventCode'
        title: The kind of tracking event that happened
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the ShipmentTrackingEvent. When this event was received by Einride.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the ShipmentTrackingEvent. Set if the event is deleted.
        readOnly: true
      description:
        type: string
        description: Description for the ShipmentTrackingEvent.
      name:
        type: string
        description: The resource name of the ShipmentTrackingEvent.
        readOnly: true
      occurredTime:
        type: string
        format: date-time
        description: When the event occurred.
      shipment:
        type: string
        description: Resource name of the shipment that owns the ShipmentTrackingEvent.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the ShipmentTrackingEvent.
          Updated when create/update/delete operation is performed.
        readOnly: true
      vehicle:
        $ref: '#/definitions/v1beta1Vehicle'
        title: On what vehicle did this event occur
    description: A shipment tracking event represents an event on a shipment.
    required:
      - code
      - occurredTime
  v1beta1Vehicle:
    type: object
    properties:
      carrierReferenceId:
        type: string
        title: Carrier reference id
      driverReferenceId:
        type: string
        title: Driver reference id
      vehicleReferenceId:
        type: string
        title: Vehicle reference id
    title: Holds vehicle information if needed by the shipment tracking event
    required:
      - vehicleReferenceId
securityDefinitions:
  Authorization:
    type: apiKey
    name: authorization
    in: header
security:
  - Authorization: []
