swagger: "2.0"
info:
  title: 'Einride Extend: Shipment API'
  description: |
    Based on REST principles, with optional support for gRPC, the Einride Extend Shipment API enables modern API-based integration to Einride Saga for transport booking.

    API design
    ----------

    The Einride Extend APIs are designed using the [AIP](https://aip.dev) design framework, which means that they are resource-oriented and work like standard [REST](https://en.wikipedia.org/wiki/Representational_state_transfer) APIs.

    ### Resource-oriented design

    *See also: [AIP-121: Resource-oriented design](https://google.aip.dev/121)*

    The fundamental building blocks of this API are individually-named resources (nouns) and the relationships and hierarchy that exist between them.

    A number of standard methods (verbs) provide the semantics for common [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete) operations. Custom methods are available where custom operations are required, such as for cancelling shipments.

    ### Resource names

    *See also: [AIP-122: Resource names](https://google.aip.dev/122)*

    This API exposes resources which users are able to create, retrieve, and manipulate. Resources are named: each resource has a unique identifier that users use to reference that resource, and these names are what users should store as the canonical names for the resources.

    As such, the unique identifier for a resource in this API is called a *resource name*.

    Protocols
    ---------

    The Einride Extend APIs support both HTTP and gRPC protocols.

    ### HTTP

    The Einride Extend APIs are available as RESTful HTTP endpoints.

    See this document for the OpenAPI specifications, or use the API documentation at [extend.saga.einride.tech](https://extend.saga.einride.tech), where you can also try out the REST APIs and make example requests.

    ### gRPC

    [gRPC](https://grpc.io) is a high performance, open source universal RPC framework that works across programming languages and platforms.

    To for more information about using Einride Extend APIs via gRPC, please contact your Einride representative.

    Authentication
    ---------

    The Einride Extend use standard [Bearer token authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/). When using the HTTP APIs, make sure to always provide the following header in all requests:


        Authorization: Bearer <token>


    Where `<token>` is the authentication token for your integration. Please contact your Einride representative to obtain an authentication token for your integration.

    API address
    ---------

    The Einride Extend API is available via the following root address:

    https://api.saga.einride.tech
  version: v1beta1
tags:
  - name: ShipmentService
  - name: ShipmentTrackingEventService
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1beta1/{shipment}:
    get:
      summary: Get a shipment.
      description: This is an AIP standard [Get](https://google.aip.dev/131) method.
      operationId: ShipmentService_GetShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipment
          description: The resource name of the shipment to retrieve.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
      tags:
        - ShipmentService
  /v1beta1/{shipment}/trackingEvents:
    post:
      summary: Create a tracking event for a shipment
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: ShipmentTrackingEventService_CreateShipmentTrackingEvent
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1ShipmentTrackingEvent'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipment
          description: The parent shipment in which to create the event.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
        - name: shipmentTrackingEvent
          description: The shipment tracking event
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1beta1ShipmentTrackingEvent'
      tags:
        - ShipmentTrackingEventService
  /v1beta1/{shipment}:release:
    post:
      summary: Release a shipment.
      description: |-
        The state of the shipment after releasing it is RELEASED.

        This is an AIP [state](https://google.aip.dev/216) transition method.
      operationId: ShipmentService_ReleaseShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: shipment
          description: The resource name of the shipment to release.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+/shipments/[^/]+
        - name: body
          in: body
          required: true
          schema:
            type: object
            description: Request message for BookService.ReleaseShipment.
      tags:
        - ShipmentService
  /v1beta1/{space}/shipments:
    post:
      summary: Create a shipment in a space.
      description: This is an AIP standard [Create](https://google.aip.dev/133) method.
      operationId: ShipmentService_CreateShipment
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: '#/definitions/v1beta1Shipment'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/rpcStatus'
      parameters:
        - name: space
          description: The parent space in which to create the shipment.
          in: path
          required: true
          type: string
          pattern: spaces/[^/]+
        - name: shipment
          description: The shipment to create.
          in: body
          required: true
          schema:
            $ref: '#/definitions/v1beta1Shipment'
      tags:
        - ShipmentService
definitions:
  ShipmentDeliveryState:
    type: string
    enum:
      - AWAITING
      - IN_TRANSIT
      - DELIVERED
    description: |-
      - DELIVERY_STATE_UNSPECIFIED: Unspecified shipment delivery state
       - AWAITING: Shipment delivery hasn't started
       - IN_TRANSIT: Shipment is in transit
       - DELIVERED: Shipment is delivered
    title: Shipment delivery state
  ShipmentState:
    type: string
    enum:
      - ACTIVE
      - RELEASED
    description: |-
      - STATE_UNSPECIFIED: Unspecified shipment state.
       - ACTIVE: Shipment is active (initial state).
       - RELEASED: Shipment is ready for pickup.
    title: Shipment state
  ShipmentTrackingEventEventCode:
    type: string
    enum:
      - PRE_ADVICE
      - ACCEPTED
      - REJECTED
      - FAILED
      - RELEASED
      - DEPARTED
      - IN_TRANSIT
      - ARRIVED_AT_HUB
      - ARRIVED_AT_DESTINATION
      - DELIVERED
      - DELIVERY_ATTEMPT_FAILED
      - DAMAGED_GOODS
    description: |-
      - EVENT_CODE_UNSPECIFIED: Unspecified
       - PRE_ADVICE: Pre-advice
       - ACCEPTED: Accepted
       - REJECTED: Rejected
       - FAILED: Failed
       - RELEASED: Released
       - DEPARTED: Departed
       - IN_TRANSIT: In transit
       - ARRIVED_AT_HUB: Arrived at hub
       - ARRIVED_AT_DESTINATION: Arrived at destination
       - DELIVERED: Delivered
       - DELIVERY_ATTEMPT_FAILED: Delivery attempt failed
       - DAMAGED_GOODS: Damaged goods
    title: Event code
  UnitLength:
    type: object
    properties:
      unit:
        $ref: '#/definitions/UnitLengthUnit'
      value:
        type: number
        format: double
        title: Length value
    title: Length specified in different units
    required:
      - value
      - unit
  UnitLengthUnit:
    type: string
    enum:
      - CM
      - IN
    description: |-
      - UNIT_UNSPECIFIED: Unspecified unit
       - CM: Centimeters
       - IN: Inches
    title: Length units
  UnitVolume:
    type: object
    properties:
      unit:
        $ref: '#/definitions/UnitVolumeUnit'
      value:
        type: number
        format: double
        title: Volume value
    title: Volume specified in different units
    required:
      - value
      - unit
  UnitVolumeUnit:
    type: string
    enum:
      - CBM
      - CBFT
    description: |-
      - UNIT_UNSPECIFIED: Unspecified unit
       - CBM: Cubic meters
       - CBFT: Cubic feet
    title: Volume units
  UnitWeight:
    type: object
    properties:
      unit:
        $ref: '#/definitions/UnitWeightUnit'
      value:
        type: number
        format: double
        title: Weight value
    title: Weight specified in different units
    required:
      - value
      - unit
  UnitWeightUnit:
    type: string
    enum:
      - KG
      - LBS
    description: |-
      - UNIT_UNSPECIFIED: Unspecified unit
       - KG: Kilograms
       - LBS: Pounds
    title: Weight units
  bookv1beta1Location:
    type: object
    properties:
      addressCity:
        type: string
        title: Address city
      addressCo:
        type: string
        title: Address care of (C/O)
      addressCountryCode:
        type: string
        title: |-
          Address country code (ISO 3166-1 alpha-2
          https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2
      addressLine1:
        type: string
        title: Address line 1
      addressLine2:
        type: string
        title: Address line 2
      addressPostalCode:
        type: string
        title: Address postal code
      addressRecipient:
        type: string
        title: Address recipient
      addressStateCode:
        type: string
        title: Address state code
      contacts:
        type: string
        description: Location contact information.
      latitude:
        type: number
        format: double
        description: The latitude of the location in degrees. It must be in the range [-90.0, +90.0].
      longitude:
        type: number
        format: double
        description: The longitude of the location in degrees. It must be in the range [-180.0, +180.0].
    description: A location is where goods are picked up or delivered.
    required:
      - addressRecipient
      - addressLine1
      - addressPostalCode
      - addressCity
      - addressCountryCode
  bookv1beta1Unit:
    type: object
    properties:
      description:
        type: string
        title: Description of the unit
      externalReferenceId:
        type: string
        title: External reference ID of the unit
      height:
        $ref: '#/definitions/UnitLength'
      length:
        $ref: '#/definitions/UnitLength'
      trackingId:
        type: string
        title: Unique unit tracking ID
        readOnly: true
      type:
        type: string
        title: Type of unit
      volume:
        $ref: '#/definitions/UnitVolume'
      weight:
        $ref: '#/definitions/UnitWeight'
      width:
        $ref: '#/definitions/UnitLength'
    description: A unit is a holder of goods such as a EUR-pallet.
    required:
      - type
      - weight
  protobufAny:
    type: object
    properties:
      '@type':
        type: string
    additionalProperties: {}
  rpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      details:
        type: array
        items:
          $ref: '#/definitions/protobufAny'
      message:
        type: string
  typeLatLng:
    type: object
    properties:
      latitude:
        type: number
        format: double
        description: The latitude in degrees. It must be in the range [-90.0, +90.0].
      longitude:
        type: number
        format: double
        description: The longitude in degrees. It must be in the range [-180.0, +180.0].
    description: |-
      An object that represents a latitude/longitude pair. This is expressed as a
      pair of doubles to represent degrees latitude and degrees longitude. Unless
      specified otherwise, this must conform to the
      <a href="http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf">WGS84
      standard</a>. Values must be within normalized ranges.
  v1beta1Address:
    type: object
    properties:
      city:
        type: string
        title: City
      co:
        type: string
        title: Care of (C/O)
      contactInfo:
        type: string
        title: Contact information
      displayName:
        type: string
        title: The displayed name of the address
      latLng:
        $ref: '#/definitions/typeLatLng'
      line1:
        type: string
        title: Address line 1
      line2:
        type: string
        title: Address line 2
      postalCode:
        type: string
        title: Postal code
      recipient:
        type: string
        title: Recipient
      regionCode:
        type: string
        title: |-
          Region code (Unicode CLDR region code)
          https://cldr.unicode.org/
      stateCode:
        type: string
        title: State code
    description: An Address is where goods are picked up or delivered.
    required:
      - recipient
      - line1
      - postalCode
      - city
      - regionCode
  v1beta1Shipment:
    type: object
    properties:
      booking:
        type: string
        description: Resource name of the booking this shipment relates to.
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the shipment.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the shipment. Set if the shipment is deleted.
        readOnly: true
      deliveryInstructions:
        type: string
        description: Instructions for the delivery.
      deliveryLocation:
        $ref: '#/definitions/bookv1beta1Location'
      deliveryState:
        $ref: '#/definitions/ShipmentDeliveryState'
      externalReferenceId:
        type: string
        description: An external reference for this shipment.
      name:
        type: string
        description: The resource name of the shipment.
        readOnly: true
      pickupInstructions:
        type: string
        description: Instructions for the pickup.
      pickupLocation:
        $ref: '#/definitions/bookv1beta1Location'
      requestedDeliveryEndTime:
        type: string
        format: date-time
        title: The shipment should be delivered before this time
      requestedDeliveryStartTime:
        type: string
        format: date-time
        title: The shipment should be delivered after this time
      requestedPickupEndTime:
        type: string
        format: date-time
        title: The shipment should be picked up before this time
      requestedPickupStartTime:
        type: string
        format: date-time
        title: The shipment should be picked up after this time
      sender:
        type: string
        description: Resource name of the sender of the shipment.
      space:
        type: string
        description: Resource name of the space that owns the shipment.
        readOnly: true
      state:
        $ref: '#/definitions/ShipmentState'
      trackingId:
        type: string
        description: A generated tracking ID for this shipment.
        readOnly: true
      units:
        type: array
        items:
          $ref: '#/definitions/bookv1beta1Unit'
        title: Shipment units
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the shipment.
          Updated when create/update/delete operation is performed.
        readOnly: true
    description: A shipment represents a demand to deliver goods from an origin to a destination.
    required:
      - sender
      - deliveryLocation
      - units
  v1beta1ShipmentTrackingEvent:
    type: object
    properties:
      address:
        $ref: '#/definitions/v1beta1Address'
      code:
        $ref: '#/definitions/ShipmentTrackingEventEventCode'
      createTime:
        type: string
        format: date-time
        description: The creation timestamp of the ShipmentTrackingEvent. When this event was received by Einride.
        readOnly: true
      deleteTime:
        type: string
        format: date-time
        description: The deletion timestamp of the ShipmentTrackingEvent. Set if the event is deleted.
        readOnly: true
      description:
        type: string
        description: Description for the ShipmentTrackingEvent.
      name:
        type: string
        description: The resource name of the ShipmentTrackingEvent.
        readOnly: true
      occurredTime:
        type: string
        format: date-time
        description: When the event occurred.
      shipment:
        type: string
        description: Resource name of the shipment that owns the ShipmentTrackingEvent.
        readOnly: true
      updateTime:
        type: string
        format: date-time
        description: |-
          The last update timestamp of the ShipmentTrackingEvent.
          Updated when create/update/delete operation is performed.
        readOnly: true
    description: A shipment tracking event represents an event on a shipment.
    required:
      - code
      - occurredTime
securityDefinitions:
  Authorization:
    type: apiKey
    name: authorization
    in: header
security:
  - Authorization: []
